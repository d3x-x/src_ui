{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef, useRef, useImperativeHandle, useEffect } from 'react';\nimport { classNames, getExtraAttrs, emit } from '../shared/utils';\nimport { colorClasses } from '../shared/mixins';\nimport { f7ready, f7 } from '../shared/f7';\nvar Row = /*#__PURE__*/forwardRef(function (props, ref) {\n  var className = props.className,\n    id = props.id,\n    style = props.style,\n    children = props.children,\n    _props$tag = props.tag,\n    tag = _props$tag === void 0 ? 'div' : _props$tag,\n    noGap = props.noGap,\n    resizable = props.resizable,\n    resizableFixed = props.resizableFixed,\n    resizableAbsolute = props.resizableAbsolute,\n    _props$resizableHandl = props.resizableHandler,\n    resizableHandler = _props$resizableHandl === void 0 ? true : _props$resizableHandl;\n  var extraAttrs = getExtraAttrs(props);\n  var elRef = useRef(null);\n  var onClick = function onClick(event) {\n    emit(props, 'click', event);\n  };\n  var onResize = function onResize(el) {\n    if (el === elRef.current) {\n      emit(props, 'gridResize');\n    }\n  };\n  useImperativeHandle(ref, function () {\n    return {\n      el: elRef.current\n    };\n  });\n  useEffect(function () {\n    f7ready(function () {\n      f7.on('gridResize', onResize);\n    });\n    return function () {\n      f7.off('gridResize', onResize);\n    };\n  });\n  var RowTag = tag;\n  var classes = classNames(className, 'row', {\n    'no-gap': noGap,\n    resizable: resizable,\n    'resizable-fixed': resizableFixed,\n    'resizable-absolute': resizableAbsolute\n  }, colorClasses(props));\n  return /*#__PURE__*/React.createElement(RowTag, _extends({\n    id: id,\n    style: style,\n    className: classes,\n    ref: elRef\n  }, extraAttrs, {\n    onClick: onClick\n  }), children, resizable && resizableHandler && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"resize-handler\"\n  }));\n});\nRow.displayName = 'f7-row';\nexport default Row;","map":null,"metadata":{},"sourceType":"module"}