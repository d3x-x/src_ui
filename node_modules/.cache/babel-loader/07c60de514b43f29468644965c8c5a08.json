{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef, useRef, useImperativeHandle } from 'react';\nimport { classNames, getExtraAttrs } from '../shared/utils';\nimport { colorClasses } from '../shared/mixins';\nvar MenuDropdown = /*#__PURE__*/forwardRef(function (props, ref) {\n  var className = props.className,\n    id = props.id,\n    style = props.style,\n    children = props.children,\n    contentHeight = props.contentHeight,\n    position = props.position,\n    left = props.left,\n    center = props.center,\n    right = props.right;\n  var extraAttrs = getExtraAttrs(props);\n  var elRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return {\n      el: elRef.current\n    };\n  });\n  var positionComputed = position || 'left';\n  if (left) positionComputed = 'left';\n  if (center) positionComputed = 'center';\n  if (right) positionComputed = 'right';\n  var classes = classNames('menu-dropdown', \"menu-dropdown-\" + positionComputed, colorClasses(props), className);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    id: id,\n    style: style,\n    className: classes,\n    ref: elRef\n  }, extraAttrs), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu-dropdown-content\",\n    style: {\n      height: contentHeight\n    }\n  }, children));\n});\nMenuDropdown.displayName = 'f7-menu-dropdown';\nexport default MenuDropdown;","map":null,"metadata":{},"sourceType":"module"}