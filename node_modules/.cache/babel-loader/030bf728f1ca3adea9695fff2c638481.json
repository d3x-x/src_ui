{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef, useRef, useImperativeHandle } from 'react';\nimport { classNames, getExtraAttrs, emit } from '../shared/utils';\nimport { colorClasses } from '../shared/mixins';\nvar Radio = /*#__PURE__*/forwardRef(function (props, ref) {\n  var className = props.className,\n    id = props.id,\n    style = props.style,\n    children = props.children,\n    value = props.value,\n    disabled = props.disabled,\n    readonly = props.readonly,\n    checked = props.checked,\n    defaultChecked = props.defaultChecked;\n  var extraAttrs = getExtraAttrs(props);\n  var elRef = useRef(null);\n  var onChange = function onChange(event) {\n    emit(props, 'change', event);\n  };\n  useImperativeHandle(ref, function () {\n    return {\n      el: elRef.current\n    };\n  });\n  var inputEl = /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: name,\n    value: value,\n    disabled: disabled,\n    readOnly: readonly,\n    checked: checked,\n    defaultChecked: defaultChecked,\n    onChange: onChange\n  });\n  var iconEl = /*#__PURE__*/React.createElement(\"i\", {\n    className: \"icon-radio\"\n  });\n  var classes = classNames(className, 'radio', {\n    disabled: disabled\n  }, colorClasses(props));\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    id: id,\n    style: style,\n    className: classes,\n    ref: elRef\n  }, extraAttrs), inputEl, iconEl, children);\n});\nRadio.displayName = 'f7-radio';\nexport default Radio;","map":null,"metadata":{},"sourceType":"module"}