{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef, useRef, useImperativeHandle } from 'react';\nimport { classNames, getExtraAttrs, extend } from '../shared/utils';\nimport { colorClasses } from '../shared/mixins';\nimport { useTooltip } from '../shared/use-tooltip';\nimport { useTheme } from '../shared/use-theme';\nvar Icon = /*#__PURE__*/forwardRef(function (props, ref) {\n  var theme = useTheme();\n  var className = props.className,\n    id = props.id,\n    style = props.style,\n    children = props.children,\n    material = props.material,\n    f7 = props.f7,\n    icon = props.icon,\n    md = props.md,\n    ios = props.ios,\n    aurora = props.aurora,\n    size = props.size;\n  var extraAttrs = getExtraAttrs(props);\n  var elRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return {\n      el: elRef.current\n    };\n  });\n  useTooltip(elRef, props);\n  var getClasses = function getClasses() {\n    var classes = {\n      icon: true\n    };\n    var themeIcon;\n    if (theme && theme.ios) themeIcon = ios;else if (theme && theme.md) themeIcon = md;else if (theme && theme.aurora) themeIcon = aurora;\n    if (themeIcon) {\n      var parts = themeIcon.split(':');\n      var prop = parts[0];\n      var value = parts[1];\n      if (prop === 'material' || prop === 'f7') {\n        classes['material-icons'] = prop === 'material';\n        classes['f7-icons'] = prop === 'f7';\n      }\n      if (prop === 'icon') {\n        classes[value] = true;\n      }\n    } else {\n      classes = {\n        icon: true,\n        'material-icons': material,\n        'f7-icons': f7\n      };\n      if (icon) classes[icon] = true;\n    }\n    return classNames(className, classes, colorClasses(props));\n  };\n  var getIconText = function getIconText() {\n    var text = material || f7;\n    if (md && theme && theme.md && (md.indexOf('material:') >= 0 || md.indexOf('f7:') >= 0)) {\n      text = md.split(':')[1];\n    } else if (ios && theme && theme.ios && (ios.indexOf('material:') >= 0 || ios.indexOf('f7:') >= 0)) {\n      text = ios.split(':')[1];\n    } else if (aurora && theme && theme.aurora && (aurora.indexOf('material:') >= 0 || aurora.indexOf('f7:') >= 0)) {\n      text = aurora.split(':')[1];\n    }\n    return text;\n  };\n  var sizeComputed = size;\n  if (typeof size === 'number' || parseFloat(size) === size * 1) {\n    sizeComputed = size + \"px\";\n  }\n  return /*#__PURE__*/React.createElement(\"i\", _extends({\n    id: id,\n    style: extend({\n      fontSize: sizeComputed,\n      width: sizeComputed,\n      height: sizeComputed\n    }, style),\n    className: getClasses(),\n    ref: elRef\n  }, extraAttrs), getIconText(), children);\n});\nIcon.displayName = 'f7-icon';\nexport default Icon;","map":null,"metadata":{},"sourceType":"module"}