{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef, useRef, useImperativeHandle } from 'react';\nimport { useIsomorphicLayoutEffect } from '../shared/use-isomorphic-layout-effect';\nimport { classNames, getExtraAttrs, emit, noUndefinedProps } from '../shared/utils';\nimport { colorClasses } from '../shared/mixins';\nimport { f7ready, f7 } from '../shared/f7';\nimport { watchProp } from '../shared/watch-prop';\nvar Stepper = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _f7Stepper = useRef(null);\n  var className = props.className,\n    id = props.id,\n    style = props.style,\n    _props$init = props.init,\n    init = _props$init === void 0 ? true : _props$init,\n    _props$value = props.value,\n    value = _props$value === void 0 ? 0 : _props$value,\n    _props$min = props.min,\n    min = _props$min === void 0 ? 0 : _props$min,\n    _props$max = props.max,\n    max = _props$max === void 0 ? 100 : _props$max,\n    _props$step = props.step,\n    step = _props$step === void 0 ? 1 : _props$step,\n    formatValue = props.formatValue,\n    name = props.name,\n    inputId = props.inputId,\n    _props$input = props.input,\n    input = _props$input === void 0 ? true : _props$input,\n    _props$inputType = props.inputType,\n    inputType = _props$inputType === void 0 ? 'text' : _props$inputType,\n    _props$inputReadonly = props.inputReadonly,\n    inputReadonly = _props$inputReadonly === void 0 ? false : _props$inputReadonly,\n    _props$autorepeat = props.autorepeat,\n    autorepeat = _props$autorepeat === void 0 ? false : _props$autorepeat,\n    _props$autorepeatDyna = props.autorepeatDynamic,\n    autorepeatDynamic = _props$autorepeatDyna === void 0 ? false : _props$autorepeatDyna,\n    _props$wraps = props.wraps,\n    wraps = _props$wraps === void 0 ? false : _props$wraps,\n    _props$manualInputMod = props.manualInputMode,\n    manualInputMode = _props$manualInputMod === void 0 ? false : _props$manualInputMod,\n    _props$decimalPoint = props.decimalPoint,\n    decimalPoint = _props$decimalPoint === void 0 ? 4 : _props$decimalPoint,\n    _props$buttonsEndInpu = props.buttonsEndInputMode,\n    buttonsEndInputMode = _props$buttonsEndInpu === void 0 ? true : _props$buttonsEndInpu,\n    disabled = props.disabled,\n    buttonsOnly = props.buttonsOnly,\n    round = props.round,\n    roundMd = props.roundMd,\n    roundIos = props.roundIos,\n    roundAurora = props.roundAurora,\n    fill = props.fill,\n    fillMd = props.fillMd,\n    fillIos = props.fillIos,\n    fillAurora = props.fillAurora,\n    large = props.large,\n    largeMd = props.largeMd,\n    largeIos = props.largeIos,\n    largeAurora = props.largeAurora,\n    small = props.small,\n    smallMd = props.smallMd,\n    smallIos = props.smallIos,\n    smallAurora = props.smallAurora,\n    raised = props.raised,\n    raisedMd = props.raisedMd,\n    raisedIos = props.raisedIos,\n    raisedAurora = props.raisedAurora;\n  var extraAttrs = getExtraAttrs(props);\n  var elRef = useRef(null);\n  var increment = function increment() {\n    if (!_f7Stepper.current) return;\n    _f7Stepper.current.increment();\n  };\n  var decrement = function decrement() {\n    if (!_f7Stepper.current) return;\n    _f7Stepper.current.decrement();\n  };\n  var setValue = function setValue(newValue) {\n    if (_f7Stepper.current && _f7Stepper.current.setValue) _f7Stepper.current.setValue(newValue);\n  };\n  var getValue = function getValue() {\n    if (_f7Stepper.current && _f7Stepper.current.getValue) {\n      return _f7Stepper.current.getValue();\n    }\n    return undefined;\n  };\n  var onInput = function onInput(event) {\n    emit(props, 'input', event, _f7Stepper.current);\n  };\n  var onChange = function onChange(event) {\n    emit(props, 'change', event, _f7Stepper.current);\n  };\n  var onMinusClick = function onMinusClick(event) {\n    emit(props, 'stepperMinusClick', event, _f7Stepper.current);\n  };\n  var onPlusClick = function onPlusClick(event) {\n    emit(props, 'stepperPlusClick', event, _f7Stepper.current);\n  };\n  useImperativeHandle(ref, function () {\n    return {\n      el: elRef.current,\n      f7Stepper: function f7Stepper() {\n        return _f7Stepper.current;\n      },\n      increment: increment,\n      decrement: decrement,\n      setValue: setValue,\n      getValue: getValue\n    };\n  });\n  watchProp(value, function (newValue) {\n    if (!_f7Stepper.current) return;\n    _f7Stepper.current.setValue(newValue);\n  });\n  var onStepperChange = function onStepperChange(stepper, newValue) {\n    emit(props, 'stepperChange', newValue);\n  };\n  var stepperEvents = function stepperEvents(method) {\n    if (!_f7Stepper.current) return;\n    _f7Stepper.current[method]('change', onStepperChange);\n  };\n  var onMount = function onMount() {\n    f7ready(function () {\n      if (!init || !elRef.current) return;\n      _f7Stepper.current = f7.stepper.create(noUndefinedProps({\n        el: elRef.current,\n        min: min,\n        max: max,\n        value: value,\n        step: step,\n        formatValue: formatValue,\n        autorepeat: autorepeat,\n        autorepeatDynamic: autorepeatDynamic,\n        wraps: wraps,\n        manualInputMode: manualInputMode,\n        decimalPoint: decimalPoint,\n        buttonsEndInputMode: buttonsEndInputMode\n      }));\n      stepperEvents('on');\n    });\n  };\n  var onDestroy = function onDestroy() {\n    if (_f7Stepper.current && _f7Stepper.current.destroy) {\n      _f7Stepper.current.destroy();\n    }\n    _f7Stepper.current = null;\n  };\n  useIsomorphicLayoutEffect(function () {\n    stepperEvents('on');\n    return function () {\n      stepperEvents('off');\n    };\n  });\n  useIsomorphicLayoutEffect(function () {\n    onMount();\n    return onDestroy;\n  }, []);\n  var inputWrapEl;\n  var valueEl;\n  if (input && !buttonsOnly) {\n    var inputEl = /*#__PURE__*/React.createElement(\"input\", {\n      name: name,\n      id: inputId,\n      type: inputType,\n      min: inputType === 'number' ? min : undefined,\n      max: inputType === 'number' ? max : undefined,\n      step: inputType === 'number' ? step : undefined,\n      onInput: onInput,\n      onChange: onChange,\n      value: value,\n      readOnly: inputReadonly\n    });\n    inputWrapEl = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stepper-input-wrap\"\n    }, inputEl);\n  }\n  if (!input && !buttonsOnly) {\n    valueEl = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stepper-value\"\n    }, value);\n  }\n  var classes = classNames(className, 'stepper', {\n    disabled: disabled,\n    'stepper-round': round,\n    'stepper-round-ios': roundIos,\n    'stepper-round-md': roundMd,\n    'stepper-round-aurora': roundAurora,\n    'stepper-fill': fill,\n    'stepper-fill-ios': fillIos,\n    'stepper-fill-md': fillMd,\n    'stepper-fill-aurora': fillAurora,\n    'stepper-large': large,\n    'stepper-large-ios': largeIos,\n    'stepper-large-md': largeMd,\n    'stepper-large-aurora': largeAurora,\n    'stepper-small': small,\n    'stepper-small-ios': smallIos,\n    'stepper-small-md': smallMd,\n    'stepper-small-aurora': smallAurora,\n    'stepper-raised': raised,\n    'stepper-raised-ios': raisedIos,\n    'stepper-raised-md': raisedMd,\n    'stepper-raised-aurora': raisedAurora\n  }, colorClasses(props));\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: elRef,\n    id: id,\n    style: style,\n    className: classes\n  }, extraAttrs), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stepper-button-minus\",\n    onClick: onMinusClick\n  }), inputWrapEl, valueEl, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stepper-button-plus\",\n    onClick: onPlusClick\n  }));\n});\nStepper.displayName = 'f7-stepper';\nexport default Stepper;","map":null,"metadata":{},"sourceType":"module"}