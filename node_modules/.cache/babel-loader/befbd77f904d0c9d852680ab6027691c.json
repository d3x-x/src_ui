{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef, useRef, useImperativeHandle, useContext } from 'react';\nimport { useIsomorphicLayoutEffect } from '../shared/use-isomorphic-layout-effect';\nimport { classNames, getExtraAttrs, getSlots, emit, isStringProp } from '../shared/utils';\nimport { colorClasses, actionsAttrs, actionsClasses, routerAttrs, routerClasses } from '../shared/mixins';\nimport { useRouteProps } from '../shared/use-route-props';\nimport { useSmartSelect } from '../shared/use-smart-select';\nimport { useTooltip } from '../shared/use-tooltip';\nimport { watchProp } from '../shared/watch-prop';\nimport { f7ready, f7 } from '../shared/f7';\nimport ListItemContent from './list-item-content';\nimport { ListContext } from '../shared/list-context';\n\n/*\nconst ListItemContent = ({\n  props,\n  slots,\n  inputElRef,\n  onChange,\n  onClick,\n  isMediaComputed,\n  isSortableComputed,\n  isSortableOppositeComputed,\n} = {}) => {\n  const {\n    radio,\n    checkbox,\n    value,\n    name,\n    readonly,\n    disabled,\n    checked,\n    defaultChecked,\n    required,\n    media,\n    header,\n    footer,\n    title,\n    subtitle,\n    text,\n    after,\n    badge,\n    badgeColor,\n    radioIcon,\n    swipeout,\n    sortable,\n    accordionItem,\n  } = props;\n\n};\n*/\n\nvar ListItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var className = props.className,\n    id = props.id,\n    style = props.style,\n    children = props.children,\n    title = props.title,\n    link = props.link,\n    target = props.target,\n    tabLink = props.tabLink,\n    tabLinkActive = props.tabLinkActive,\n    selected = props.selected,\n    mediaItem = props.mediaItem,\n    mediaList = props.mediaList,\n    divider = props.divider,\n    groupTitle = props.groupTitle,\n    swipeout = props.swipeout,\n    swipeoutOpened = props.swipeoutOpened,\n    sortable = props.sortable,\n    sortableOpposite = props.sortableOpposite,\n    accordionItem = props.accordionItem,\n    accordionItemOpened = props.accordionItemOpened,\n    smartSelect = props.smartSelect,\n    smartSelectParams = props.smartSelectParams,\n    noChevron = props.noChevron,\n    chevronCenter = props.chevronCenter,\n    checkbox = props.checkbox,\n    radio = props.radio,\n    disabled = props.disabled,\n    virtualListIndex = props.virtualListIndex,\n    href = props.href;\n  var listContext = useContext(ListContext);\n  var _ref = listContext || {},\n    _ref$listIsMedia = _ref.listIsMedia,\n    listIsMedia = _ref$listIsMedia === void 0 ? false : _ref$listIsMedia,\n    _ref$listIsSortable = _ref.listIsSortable,\n    listIsSortable = _ref$listIsSortable === void 0 ? false : _ref$listIsSortable,\n    _ref$listIsSortableOp = _ref.listIsSortableOpposite,\n    listIsSortableOpposite = _ref$listIsSortableOp === void 0 ? false : _ref$listIsSortableOp,\n    _ref$listIsSimple = _ref.listIsSimple,\n    listIsSimple = _ref$listIsSimple === void 0 ? false : _ref$listIsSimple;\n  var extraAttrs = getExtraAttrs(props);\n  var elRef = useRef(null);\n  var linkElRef = useRef(null);\n  var _f7SmartSelect = useRef(null);\n  var onClick = function onClick(event) {\n    if (event.target.tagName.toLowerCase() !== 'input') {\n      emit(props, 'click', event);\n    }\n  };\n  var onSwipeoutOverswipeEnter = function onSwipeoutOverswipeEnter(el) {\n    if (elRef.current !== el) return;\n    emit(props, 'swipeoutOverswipeEnter');\n  };\n  var onSwipeoutOverswipeExit = function onSwipeoutOverswipeExit(el) {\n    if (elRef.current !== el) return;\n    emit(props, 'swipeoutOverswipeExit');\n  };\n  var onSwipeoutDeleted = function onSwipeoutDeleted(el) {\n    if (elRef.current !== el) return;\n    emit(props, 'swipeoutDeleted');\n  };\n  var onSwipeoutDelete = function onSwipeoutDelete(el) {\n    if (elRef.current !== el) return;\n    emit(props, 'swipeoutDelete');\n  };\n  var onSwipeoutClose = function onSwipeoutClose(el) {\n    if (elRef.current !== el) return;\n    emit(props, 'swipeoutClose');\n  };\n  var onSwipeoutClosed = function onSwipeoutClosed(el) {\n    if (elRef.current !== el) return;\n    emit(props, 'swipeoutClosed');\n  };\n  var onSwipeoutOpen = function onSwipeoutOpen(el) {\n    if (elRef.current !== el) return;\n    emit(props, 'swipeoutOpen');\n  };\n  var onSwipeoutOpened = function onSwipeoutOpened(el) {\n    if (elRef.current !== el) return;\n    emit(props, 'swipeoutOpened');\n  };\n  var onSwipeout = function onSwipeout(el, progress) {\n    if (elRef.current !== el) return;\n    emit(props, 'swipeout', progress);\n  };\n  var onAccBeforeClose = function onAccBeforeClose(el, prevent) {\n    if (elRef.current !== el) return;\n    emit(props, 'accordionBeforeClose', prevent);\n  };\n  var onAccClose = function onAccClose(el) {\n    if (elRef.current !== el) return;\n    emit(props, 'accordionClose');\n  };\n  var onAccClosed = function onAccClosed(el) {\n    if (elRef.current !== el) return;\n    emit(props, 'accordionClosed');\n  };\n  var onAccBeforeOpen = function onAccBeforeOpen(el, prevent) {\n    if (elRef.current !== el) return;\n    emit(props, 'accordionBeforeOpen', prevent);\n  };\n  var onAccOpen = function onAccOpen(el) {\n    if (elRef.current !== el) return;\n    emit(props, 'accordionOpen');\n  };\n  var onAccOpened = function onAccOpened(el) {\n    if (elRef.current !== el) return;\n    emit(props, 'accordionOpened');\n  };\n  var onChange = function onChange(event) {\n    emit(props, 'change', event);\n  };\n  useImperativeHandle(ref, function () {\n    return {\n      el: elRef.current,\n      f7SmartSelect: function f7SmartSelect() {\n        return _f7SmartSelect.current;\n      }\n    };\n  });\n  useTooltip(elRef, props);\n  useRouteProps(linkElRef, props);\n  watchProp(swipeoutOpened, function (newValue) {\n    if (!swipeout || !elRef.current || !f7) return;\n    if (newValue) {\n      f7.swipeout.open(elRef.current);\n    } else {\n      f7.swipeout.close(elRef.current);\n    }\n  });\n  var attachEvents = function attachEvents() {\n    f7ready(function () {\n      if (swipeout) {\n        f7.on('swipeoutOpen', onSwipeoutOpen);\n        f7.on('swipeoutOpened', onSwipeoutOpened);\n        f7.on('swipeoutClose', onSwipeoutClose);\n        f7.on('swipeoutClosed', onSwipeoutClosed);\n        f7.on('swipeoutDelete', onSwipeoutDelete);\n        f7.on('swipeoutDeleted', onSwipeoutDeleted);\n        f7.on('swipeoutOverswipeEnter', onSwipeoutOverswipeEnter);\n        f7.on('swipeoutOverswipeExit', onSwipeoutOverswipeExit);\n        f7.on('swipeout', onSwipeout);\n      }\n      if (accordionItem) {\n        f7.on('accordionBeforeOpen', onAccBeforeOpen);\n        f7.on('accordionOpen', onAccOpen);\n        f7.on('accordionOpened', onAccOpened);\n        f7.on('accordionBeforeClose', onAccBeforeClose);\n        f7.on('accordionClose', onAccClose);\n        f7.on('accordionClosed', onAccClosed);\n      }\n    });\n  };\n  var detachEvents = function detachEvents() {\n    if (!f7) return;\n    f7.off('swipeoutOpen', onSwipeoutOpen);\n    f7.off('swipeoutOpened', onSwipeoutOpened);\n    f7.off('swipeoutClose', onSwipeoutClose);\n    f7.off('swipeoutClosed', onSwipeoutClosed);\n    f7.off('swipeoutDelete', onSwipeoutDelete);\n    f7.off('swipeoutDeleted', onSwipeoutDeleted);\n    f7.off('swipeoutOverswipeEnter', onSwipeoutOverswipeEnter);\n    f7.off('swipeoutOverswipeExit', onSwipeoutOverswipeExit);\n    f7.off('swipeout', onSwipeout);\n    f7.off('accordionBeforeOpen', onAccBeforeOpen);\n    f7.off('accordionOpen', onAccOpen);\n    f7.off('accordionOpened', onAccOpened);\n    f7.off('accordionBeforeClose', onAccBeforeClose);\n    f7.off('accordionClose', onAccClose);\n    f7.off('accordionClosed', onAccClosed);\n  };\n  useSmartSelect(smartSelect, smartSelectParams, _f7SmartSelect, function () {\n    return elRef.current.querySelector('a.smart-select');\n  });\n  useIsomorphicLayoutEffect(function () {\n    f7ready(function () {\n      if (swipeout && swipeoutOpened) {\n        f7.swipeout.open(elRef.current);\n      }\n    });\n  }, []);\n  useIsomorphicLayoutEffect(function () {\n    attachEvents();\n    return detachEvents;\n  });\n  var slots = getSlots(props);\n  var linkEl;\n  var itemContentEl;\n  var isMediaComputed = mediaItem || mediaList || listIsMedia;\n  var isSortableComputed = sortable === true || sortable === false ? sortable : listIsSortable;\n  var isSortableOppositeComputed = isSortableComputed && (sortableOpposite || listIsSortableOpposite);\n  if (!listIsSimple) {\n    // Item Content\n    itemContentEl = /*#__PURE__*/React.createElement(ListItemContent, _extends({}, props, {\n      slots: slots,\n      onChange: onChange,\n      onClick: link || href || accordionItem || smartSelect ? undefined : onClick,\n      isMediaComputed: isMediaComputed,\n      isSortableComputed: isSortableComputed,\n      isSortableOppositeComputed: isSortableOppositeComputed\n    })); // Link\n\n    if (link || href || accordionItem || smartSelect) {\n      var linkAttrs = _extends({\n        href: link === true ? '' : link || href,\n        target: target,\n        'data-tab': isStringProp(tabLink) && tabLink || undefined\n      }, routerAttrs(props), actionsAttrs(props));\n      var linkClasses = classNames({\n        'item-link': true,\n        'smart-select': smartSelect,\n        'tab-link': tabLink || tabLink === '',\n        'tab-link-active': tabLinkActive,\n        'item-selected': selected\n      }, routerClasses(props), actionsClasses(props));\n      linkEl = /*#__PURE__*/React.createElement(\"a\", _extends({\n        ref: linkElRef,\n        className: linkClasses\n      }, linkAttrs, {\n        onClick: onClick\n      }), itemContentEl);\n    }\n  }\n  var liClasses = classNames(className, {\n    'item-divider': divider,\n    'list-group-title': groupTitle,\n    'media-item': isMediaComputed,\n    swipeout: swipeout,\n    'accordion-item': accordionItem,\n    'accordion-item-opened': accordionItemOpened,\n    disabled: disabled && !(radio || checkbox),\n    'no-chevron': noChevron,\n    'chevron-center': chevronCenter,\n    'disallow-sorting': sortable === false\n  }, colorClasses(props));\n  if (divider || groupTitle) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      ref: elRef,\n      id: id,\n      style: style,\n      className: liClasses,\n      \"data-virtual-list-index\": virtualListIndex,\n      onClick: onClick\n    }, /*#__PURE__*/React.createElement(\"span\", null, title, children));\n  }\n  if (listIsSimple) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      ref: elRef,\n      id: id,\n      style: style,\n      className: liClasses,\n      \"data-virtual-list-index\": virtualListIndex,\n      onClick: onClick\n    }, title, children);\n  }\n  var linkItemEl = link || href || smartSelect || accordionItem ? linkEl : itemContentEl;\n  return /*#__PURE__*/React.createElement(\"li\", _extends({\n    ref: elRef,\n    id: id,\n    style: style,\n    className: liClasses,\n    \"data-virtual-list-index\": virtualListIndex\n  }, extraAttrs), slots['root-start'], swipeout ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"swipeout-content\"\n  }, linkItemEl) : linkItemEl, isSortableComputed && sortable !== false && !isSortableOppositeComputed && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sortable-handler\"\n  }), (swipeout || accordionItem) && slots.default, slots.root, slots['root-end']);\n});\nListItem.displayName = 'f7-list-item';\nexport default ListItem;","map":null,"metadata":{},"sourceType":"module"}