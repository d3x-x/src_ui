{"ast":null,"code":"import $ from '../../shared/dom7';\nimport { nextFrame, bindMethods } from '../../shared/utils';\nvar Toolbar = {\n  setHighlight: function setHighlight(tabbarEl) {\n    var app = this;\n    var $tabbarEl = $(tabbarEl);\n    if (app.theme === 'ios' && !$tabbarEl.hasClass('tabbar-highlight')) return;\n    if ($tabbarEl.length === 0 || !($tabbarEl.hasClass('tabbar') || $tabbarEl.hasClass('tabbar-labels'))) return;\n    var $highlightEl = $tabbarEl.find('.tab-link-highlight');\n    var tabLinksCount = $tabbarEl.find('.tab-link').length;\n    if (tabLinksCount === 0) {\n      $highlightEl.remove();\n      return;\n    }\n    if ($highlightEl.length === 0) {\n      $tabbarEl.children('.toolbar-inner').append('<span class=\"tab-link-highlight\"></span>');\n      $highlightEl = $tabbarEl.find('.tab-link-highlight');\n    } else if ($highlightEl.next().length) {\n      $tabbarEl.children('.toolbar-inner').append($highlightEl);\n    }\n    var $activeLink = $tabbarEl.find('.tab-link-active');\n    var highlightWidth;\n    var highlightTranslate;\n    if ($tabbarEl.hasClass('tabbar-scrollable') && $activeLink && $activeLink[0]) {\n      highlightWidth = $activeLink[0].offsetWidth + \"px\";\n      highlightTranslate = $activeLink[0].offsetLeft + \"px\";\n    } else {\n      var activeIndex = $activeLink.index();\n      highlightWidth = 100 / tabLinksCount + \"%\";\n      highlightTranslate = (app.rtl ? -activeIndex : activeIndex) * 100 + \"%\";\n    }\n    nextFrame(function () {\n      $highlightEl.css('width', highlightWidth).transform(\"translate3d(\" + highlightTranslate + \",0,0)\");\n    });\n  },\n  init: function init(tabbarEl) {\n    var app = this;\n    app.toolbar.setHighlight(tabbarEl);\n  },\n  hide: function hide(el, animate) {\n    if (animate === void 0) {\n      animate = true;\n    }\n    var app = this;\n    var $el = $(el);\n    if ($el.hasClass('toolbar-hidden')) return;\n    var className = \"toolbar-hidden\" + (animate ? ' toolbar-transitioning' : '');\n    $el.transitionEnd(function () {\n      $el.removeClass('toolbar-transitioning');\n    });\n    $el.addClass(className);\n    $el.trigger('toolbar:hide');\n    app.emit('toolbarHide', $el[0]);\n  },\n  show: function show(el, animate) {\n    if (animate === void 0) {\n      animate = true;\n    }\n    var app = this;\n    var $el = $(el);\n    if (!$el.hasClass('toolbar-hidden')) return;\n    if (animate) {\n      $el.addClass('toolbar-transitioning');\n      $el.transitionEnd(function () {\n        $el.removeClass('toolbar-transitioning');\n      });\n    }\n    $el.removeClass('toolbar-hidden');\n    $el.trigger('toolbar:show');\n    app.emit('toolbarShow', $el[0]);\n  },\n  initToolbarOnScroll: function initToolbarOnScroll(pageEl) {\n    var app = this;\n    var $pageEl = $(pageEl);\n    var $toolbarEl = $pageEl.parents('.view').children('.toolbar');\n    if ($toolbarEl.length === 0) {\n      $toolbarEl = $pageEl.find('.toolbar');\n    }\n    if ($toolbarEl.length === 0) {\n      $toolbarEl = $pageEl.parents('.views').children('.tabbar, .tabbar-labels');\n    }\n    if ($toolbarEl.length === 0) {\n      return;\n    }\n    var previousScrollTop;\n    var currentScrollTop;\n    var scrollHeight;\n    var offsetHeight;\n    var reachEnd;\n    var action;\n    var toolbarHidden;\n    function handleScroll(e) {\n      if ($pageEl.hasClass('page-with-card-opened')) return;\n      if ($pageEl.hasClass('page-previous')) return;\n      var scrollContent = this;\n      if (e && e.target && e.target !== scrollContent) {\n        return;\n      }\n      currentScrollTop = scrollContent.scrollTop;\n      scrollHeight = scrollContent.scrollHeight;\n      offsetHeight = scrollContent.offsetHeight;\n      reachEnd = currentScrollTop + offsetHeight >= scrollHeight;\n      toolbarHidden = $toolbarEl.hasClass('toolbar-hidden');\n      if (reachEnd) {\n        if (app.params.toolbar.showOnPageScrollEnd) {\n          action = 'show';\n        }\n      } else if (previousScrollTop > currentScrollTop) {\n        if (app.params.toolbar.showOnPageScrollTop || currentScrollTop <= 44) {\n          action = 'show';\n        } else {\n          action = 'hide';\n        }\n      } else if (currentScrollTop > 44) {\n        action = 'hide';\n      } else {\n        action = 'show';\n      }\n      if (action === 'show' && toolbarHidden) {\n        app.toolbar.show($toolbarEl);\n        toolbarHidden = false;\n      } else if (action === 'hide' && !toolbarHidden) {\n        app.toolbar.hide($toolbarEl);\n        toolbarHidden = true;\n      }\n      previousScrollTop = currentScrollTop;\n    }\n    $pageEl.on('scroll', '.page-content', handleScroll, true);\n    $pageEl[0].f7ScrollToolbarHandler = handleScroll;\n  }\n};\nexport default {\n  name: 'toolbar',\n  create: function create() {\n    var app = this;\n    bindMethods(app, {\n      toolbar: Toolbar\n    });\n  },\n  params: {\n    toolbar: {\n      hideOnPageScroll: false,\n      showOnPageScrollEnd: true,\n      showOnPageScrollTop: true\n    }\n  },\n  on: {\n    pageBeforeRemove: function pageBeforeRemove(page) {\n      if (page.$el[0].f7ScrollToolbarHandler) {\n        page.$el.off('scroll', '.page-content', page.$el[0].f7ScrollToolbarHandler, true);\n      }\n    },\n    pageBeforeIn: function pageBeforeIn(page) {\n      var app = this;\n      var $toolbarEl = page.$el.parents('.view').children('.toolbar');\n      if ($toolbarEl.length === 0) {\n        $toolbarEl = page.$el.parents('.views').children('.tabbar, .tabbar-labels');\n      }\n      if ($toolbarEl.length === 0) {\n        $toolbarEl = page.$el.find('.toolbar');\n      }\n      if ($toolbarEl.length === 0) {\n        return;\n      }\n      if (page.$el.hasClass('no-toolbar')) {\n        app.toolbar.hide($toolbarEl);\n      } else {\n        app.toolbar.show($toolbarEl);\n      }\n    },\n    pageInit: function pageInit(page) {\n      var app = this;\n      page.$el.find('.tabbar, .tabbar-labels').each(function (tabbarEl) {\n        app.toolbar.init(tabbarEl);\n      });\n      if (app.params.toolbar.hideOnPageScroll || page.$el.find('.hide-toolbar-on-scroll').length || page.$el.hasClass('hide-toolbar-on-scroll') || page.$el.find('.hide-bars-on-scroll').length || page.$el.hasClass('hide-bars-on-scroll')) {\n        if (page.$el.find('.keep-toolbar-on-scroll').length || page.$el.hasClass('keep-toolbar-on-scroll') || page.$el.find('.keep-bars-on-scroll').length || page.$el.hasClass('keep-bars-on-scroll')) {\n          return;\n        }\n        app.toolbar.initToolbarOnScroll(page.el);\n      }\n    },\n    init: function init() {\n      var app = this;\n      app.$el.find('.tabbar, .tabbar-labels').each(function (tabbarEl) {\n        app.toolbar.init(tabbarEl);\n      });\n    }\n  },\n  vnode: {\n    tabbar: {\n      insert: function insert(vnode) {\n        var app = this;\n        app.toolbar.init(vnode.elm);\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}