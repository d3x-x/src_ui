{"ast":null,"code":"function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nimport $ from '../../shared/dom7';\nimport { extend, deleteProps, id, nextTick } from '../../shared/utils';\nimport Framework7Class from '../../shared/class';\n/** @jsx $jsx */\n\nimport $jsx from '../../shared/$jsx';\nvar SmartSelect = /*#__PURE__*/function (_Framework7Class) {\n  _inheritsLoose(SmartSelect, _Framework7Class);\n  function SmartSelect(app, params) {\n    var _this;\n    if (params === void 0) {\n      params = {};\n    }\n    _this = _Framework7Class.call(this, params, [app]) || this;\n    var ss = _assertThisInitialized(_this);\n    var defaults = extend({\n      on: {}\n    }, app.params.smartSelect);\n    if (typeof defaults.searchbarDisableButton === 'undefined') {\n      defaults.searchbarDisableButton = app.theme !== 'aurora';\n    } // Extend defaults with modules params\n\n    ss.useModulesParams(defaults);\n    ss.params = extend({}, defaults, params);\n    ss.app = app;\n    var $el = $(ss.params.el).eq(0);\n    if ($el.length === 0) return ss || _assertThisInitialized(_this);\n    if ($el[0].f7SmartSelect) return $el[0].f7SmartSelect || _assertThisInitialized(_this);\n    var $selectEl = $el.find('select').eq(0);\n    if ($selectEl.length === 0) return ss || _assertThisInitialized(_this);\n    var $valueEl;\n    if (ss.params.setValueText) {\n      $valueEl = $(ss.params.valueEl);\n      if ($valueEl.length === 0) {\n        $valueEl = $el.find('.item-after');\n      }\n      if ($valueEl.length === 0) {\n        $valueEl = $('<div class=\"item-after\"></div>');\n        $valueEl.insertAfter($el.find('.item-title'));\n      }\n    } // Url\n\n    var url = params.url;\n    if (!url) {\n      if ($el.attr('href') && $el.attr('href') !== '#') url = $el.attr('href');else if ($selectEl.attr('name')) url = $selectEl.attr('name').toLowerCase() + \"-select/\";\n    }\n    if (!url) url = ss.params.url;\n    var multiple = $selectEl[0].multiple;\n    var inputType = multiple ? 'checkbox' : 'radio';\n    var selectId = id();\n    extend(ss, {\n      $el: $el,\n      el: $el[0],\n      $selectEl: $selectEl,\n      selectEl: $selectEl[0],\n      $valueEl: $valueEl,\n      valueEl: $valueEl && $valueEl[0],\n      url: url,\n      multiple: multiple,\n      inputType: inputType,\n      id: selectId,\n      inputName: inputType + \"-\" + selectId,\n      selectName: $selectEl.attr('name'),\n      maxLength: $selectEl.attr('maxlength') || params.maxLength\n    });\n    $el[0].f7SmartSelect = ss; // Events\n\n    function onClick() {\n      ss.open();\n    }\n    function onChange() {\n      var value = ss.$selectEl.val();\n      ss.$el.trigger('smartselect:change', value);\n      ss.emit('local::change smartSelectChange', ss, value);\n      if (ss.vl) {\n        ss.vl.clearCache();\n      }\n      ss.setValueText();\n    }\n    ss.attachEvents = function attachEvents() {\n      $el.on('click', onClick);\n      $el.on('change', 'select', onChange);\n    };\n    ss.detachEvents = function detachEvents() {\n      $el.off('click', onClick);\n      $el.off('change', 'select', onChange);\n    };\n    function handleInputChange() {\n      var optionEl;\n      var text;\n      var inputEl = this;\n      var value = inputEl.value;\n      var optionText = [];\n      var displayAs;\n      if (inputEl.type === 'checkbox') {\n        for (var i = 0; i < ss.selectEl.options.length; i += 1) {\n          optionEl = ss.selectEl.options[i];\n          if (optionEl.value === value) {\n            optionEl.selected = inputEl.checked;\n          }\n          if (optionEl.selected) {\n            displayAs = optionEl.dataset ? optionEl.dataset.displayAs : $(optionEl).data('display-value-as');\n            text = displayAs && typeof displayAs !== 'undefined' ? displayAs : optionEl.textContent;\n            optionText.push(text.trim());\n          }\n        }\n        if (ss.maxLength) {\n          ss.checkMaxLength();\n        }\n      } else {\n        optionEl = ss.$selectEl.find(\"option[value=\\\"\" + value + \"\\\"]\")[0];\n        if (!optionEl) {\n          optionEl = ss.$selectEl.find('option').filter(function (optEl) {\n            return optEl.value === value;\n          })[0];\n        }\n        displayAs = optionEl.dataset ? optionEl.dataset.displayAs : $(optionEl).data('display-as');\n        text = displayAs && typeof displayAs !== 'undefined' ? displayAs : optionEl.textContent;\n        optionText = [text];\n        ss.selectEl.value = value;\n      }\n      ss.$selectEl.trigger('change');\n      if (ss.params.setValueText) {\n        ss.$valueEl.text(ss.formatValueText(optionText));\n      }\n      if (ss.params.closeOnSelect && ss.inputType === 'radio') {\n        ss.close();\n      }\n    }\n    ss.attachInputsEvents = function attachInputsEvents() {\n      ss.$containerEl.on('change', 'input[type=\"checkbox\"], input[type=\"radio\"]', handleInputChange);\n    };\n    ss.detachInputsEvents = function detachInputsEvents() {\n      ss.$containerEl.off('change', 'input[type=\"checkbox\"], input[type=\"radio\"]', handleInputChange);\n    }; // Install Modules\n\n    ss.useModules(); // Init\n\n    ss.init();\n    return ss || _assertThisInitialized(_this);\n  }\n  var _proto = SmartSelect.prototype;\n  _proto.setValue = function setValue(value) {\n    var ss = this;\n    var newValue = value;\n    var optionText = [];\n    var optionEl;\n    var displayAs;\n    var text;\n    if (ss.multiple) {\n      if (!Array.isArray(newValue)) newValue = [newValue];\n      for (var i = 0; i < ss.selectEl.options.length; i += 1) {\n        optionEl = ss.selectEl.options[i];\n        if (newValue.indexOf(optionEl.value) >= 0) {\n          optionEl.selected = true;\n        } else {\n          optionEl.selected = false;\n        }\n        if (optionEl.selected) {\n          displayAs = optionEl.dataset ? optionEl.dataset.displayAs : $(optionEl).data('display-value-as');\n          text = displayAs && typeof displayAs !== 'undefined' ? displayAs : optionEl.textContent;\n          optionText.push(text.trim());\n        }\n      }\n    } else {\n      optionEl = ss.$selectEl.find(\"option[value=\\\"\" + newValue + \"\\\"]\")[0];\n      if (optionEl) {\n        displayAs = optionEl.dataset ? optionEl.dataset.displayAs : $(optionEl).data('display-as');\n        text = displayAs && typeof displayAs !== 'undefined' ? displayAs : optionEl.textContent;\n        optionText = [text];\n      }\n      ss.selectEl.value = newValue;\n    }\n    if (ss.params.setValueText) {\n      ss.$valueEl.text(ss.formatValueText(optionText));\n    }\n    ss.$selectEl.trigger('change');\n    return ss;\n  };\n  _proto.unsetValue = function unsetValue() {\n    var ss = this;\n    if (ss.params.setValueText) {\n      ss.$valueEl.text(ss.formatValueText([]));\n    }\n    ss.$selectEl.find('option').each(function (optionEl) {\n      optionEl.selected = false;\n      optionEl.checked = false;\n    });\n    ss.$selectEl[0].value = null;\n    if (ss.$containerEl) {\n      ss.$containerEl.find(\"input[name=\\\"\" + ss.inputName + \"\\\"][type=\\\"checkbox\\\"], input[name=\\\"\" + ss.inputName + \"\\\"][type=\\\"radio\\\"]\").prop('checked', false);\n    }\n    ss.$selectEl.trigger('change');\n  };\n  _proto.getValue = function getValue() {\n    var ss = this;\n    return ss.$selectEl.val();\n  };\n  _proto.checkMaxLength = function checkMaxLength() {\n    var ss = this;\n    var $containerEl = ss.$containerEl;\n    if (ss.selectEl.selectedOptions.length >= ss.maxLength) {\n      $containerEl.find('input[type=\"checkbox\"]').each(function (inputEl) {\n        if (!inputEl.checked) {\n          $(inputEl).parents('li').addClass('disabled');\n        } else {\n          $(inputEl).parents('li').removeClass('disabled');\n        }\n      });\n    } else {\n      $containerEl.find('.disabled').removeClass('disabled');\n    }\n  };\n  _proto.formatValueText = function formatValueText(values) {\n    var ss = this;\n    var textValue;\n    if (ss.params.formatValueText) {\n      textValue = ss.params.formatValueText.call(ss, values, ss);\n    } else {\n      textValue = values.join(', ');\n    }\n    return textValue;\n  };\n  _proto.setValueText = function setValueText(value) {\n    var ss = this;\n    var valueArray = [];\n    if (typeof value !== 'undefined') {\n      if (Array.isArray(value)) {\n        valueArray = value;\n      } else {\n        valueArray = [value];\n      }\n    } else {\n      ss.$selectEl.find('option').each(function (optionEl) {\n        var $optionEl = $(optionEl);\n        if (optionEl.selected) {\n          var displayAs = optionEl.dataset ? optionEl.dataset.displayAs : $optionEl.data('display-value-as');\n          if (displayAs && typeof displayAs !== 'undefined') {\n            valueArray.push(displayAs);\n          } else {\n            valueArray.push(optionEl.textContent.trim());\n          }\n        }\n      });\n    }\n    if (ss.params.setValueText) {\n      ss.$valueEl.text(ss.formatValueText(valueArray));\n    }\n  };\n  _proto.getItemsData = function getItemsData() {\n    var ss = this;\n    var theme = ss.app.theme;\n    var items = [];\n    var previousGroupEl;\n    ss.$selectEl.find('option').each(function (optionEl) {\n      var $optionEl = $(optionEl);\n      var optionData = $optionEl.dataset();\n      var optionImage = optionData.optionImage || ss.params.optionImage;\n      var optionIcon = optionData.optionIcon || ss.params.optionIcon;\n      var optionIconIos = theme === 'ios' && (optionData.optionIconIos || ss.params.optionIconIos);\n      var optionIconMd = theme === 'md' && (optionData.optionIconMd || ss.params.optionIconMd);\n      var optionIconAurora = theme === 'aurora' && (optionData.optionIconAurora || ss.params.optionIconAurora);\n      var optionHasMedia = optionImage || optionIcon || optionIconIos || optionIconMd || optionIconAurora;\n      var optionColor = optionData.optionColor;\n      var optionClassName = optionData.optionClass || '';\n      if ($optionEl[0].disabled) optionClassName += ' disabled';\n      var optionGroupEl = $optionEl.parent('optgroup')[0];\n      var optionGroupLabel = optionGroupEl && optionGroupEl.label;\n      var optionIsLabel = false;\n      if (optionGroupEl && optionGroupEl !== previousGroupEl) {\n        optionIsLabel = true;\n        previousGroupEl = optionGroupEl;\n        items.push({\n          groupLabel: optionGroupLabel,\n          isLabel: optionIsLabel\n        });\n      }\n      items.push({\n        value: $optionEl[0].value,\n        text: $optionEl[0].textContent.trim(),\n        selected: $optionEl[0].selected,\n        groupEl: optionGroupEl,\n        groupLabel: optionGroupLabel,\n        image: optionImage,\n        icon: optionIcon,\n        iconIos: optionIconIos,\n        iconMd: optionIconMd,\n        iconAurora: optionIconAurora,\n        color: optionColor,\n        className: optionClassName,\n        disabled: $optionEl[0].disabled,\n        id: ss.id,\n        hasMedia: optionHasMedia,\n        checkbox: ss.inputType === 'checkbox',\n        radio: ss.inputType === 'radio',\n        inputName: ss.inputName,\n        inputType: ss.inputType\n      });\n    });\n    ss.items = items;\n    return items;\n  };\n  _proto.renderSearchbar = function renderSearchbar() {\n    var ss = this;\n    if (ss.params.renderSearchbar) return ss.params.renderSearchbar.call(ss);\n    return $jsx(\"form\", {\n      class: \"searchbar\"\n    }, $jsx(\"div\", {\n      class: \"searchbar-inner\"\n    }, $jsx(\"div\", {\n      class: \"searchbar-input-wrap\"\n    }, $jsx(\"input\", {\n      type: \"search\",\n      spellcheck: ss.params.searchbarSpellcheck || 'false',\n      placeholder: ss.params.searchbarPlaceholder\n    }), $jsx(\"i\", {\n      class: \"searchbar-icon\"\n    }), $jsx(\"span\", {\n      class: \"input-clear-button\"\n    })), ss.params.searchbarDisableButton && $jsx(\"span\", {\n      class: \"searchbar-disable-button\"\n    }, ss.params.searchbarDisableText)));\n  };\n  _proto.renderItem = function renderItem(item, index) {\n    var ss = this;\n    if (ss.params.renderItem) return ss.params.renderItem.call(ss, item, index);\n    function getIconContent(iconValue) {\n      if (iconValue === void 0) {\n        iconValue = '';\n      }\n      if (iconValue.indexOf(':') >= 0) {\n        return iconValue.split(':')[1];\n      }\n      return '';\n    }\n    function getIconClass(iconValue) {\n      if (iconValue === void 0) {\n        iconValue = '';\n      }\n      if (iconValue.indexOf(':') >= 0) {\n        var className = iconValue.split(':')[0];\n        if (className === 'f7') className = 'f7-icons';\n        if (className === 'material') className = 'material-icons';\n        return className;\n      }\n      return iconValue;\n    }\n    var itemHtml;\n    if (item.isLabel) {\n      itemHtml = \"<li class=\\\"item-divider\\\">\" + item.groupLabel + \"</li>\";\n    } else {\n      var selected = item.selected;\n      var disabled;\n      if (ss.params.virtualList) {\n        var ssValue = ss.getValue();\n        selected = ss.multiple ? ssValue.indexOf(item.value) >= 0 : ssValue === item.value;\n        if (ss.multiple) {\n          disabled = ss.multiple && !selected && ssValue.length === parseInt(ss.maxLength, 10);\n        }\n      }\n      var icon = item.icon,\n        iconIos = item.iconIos,\n        iconMd = item.iconMd,\n        iconAurora = item.iconAurora;\n      var hasIcon = icon || iconIos || iconMd || iconAurora;\n      var iconContent = getIconContent(icon || iconIos || iconMd || iconAurora || '');\n      var iconClass = getIconClass(icon || iconIos || iconMd || iconAurora || '');\n      itemHtml = $jsx(\"li\", {\n        class: \"\" + (item.className || '') + (disabled ? ' disabled' : '')\n      }, $jsx(\"label\", {\n        class: \"item-\" + item.inputType + \" item-content\"\n      }, $jsx(\"input\", {\n        type: item.inputType,\n        name: item.inputName,\n        value: item.value,\n        _checked: selected\n      }), $jsx(\"i\", {\n        class: \"icon icon-\" + item.inputType\n      }), item.hasMedia && $jsx(\"div\", {\n        class: \"item-media\"\n      }, hasIcon && $jsx(\"i\", {\n        class: \"icon \" + iconClass\n      }, iconContent), item.image && $jsx(\"img\", {\n        src: item.image\n      })), $jsx(\"div\", {\n        class: \"item-inner\"\n      }, $jsx(\"div\", {\n        class: \"item-title\" + (item.color ? \" text-color-\" + item.color : '')\n      }, item.text))));\n    }\n    return itemHtml;\n  };\n  _proto.renderItems = function renderItems() {\n    var ss = this;\n    if (ss.params.renderItems) return ss.params.renderItems.call(ss, ss.items);\n    var itemsHtml = \"\\n      \" + ss.items.map(function (item, index) {\n      return \"\" + ss.renderItem(item, index);\n    }).join('') + \"\\n    \";\n    return itemsHtml;\n  };\n  _proto.renderPage = function renderPage() {\n    var ss = this;\n    if (ss.params.renderPage) return ss.params.renderPage.call(ss, ss.items);\n    var pageTitle = ss.params.pageTitle;\n    if (typeof pageTitle === 'undefined') {\n      var $itemTitleEl = ss.$el.find('.item-title');\n      pageTitle = $itemTitleEl.length ? $itemTitleEl.text().trim() : '';\n    }\n    var cssClass = ss.params.cssClass;\n    return $jsx(\"div\", {\n      class: \"page smart-select-page \" + cssClass,\n      \"data-name\": \"smart-select-page\",\n      \"data-select-name\": ss.selectName\n    }, $jsx(\"div\", {\n      class: \"navbar \" + (ss.params.navbarColorTheme ? \"color-\" + ss.params.navbarColorTheme : '')\n    }, $jsx(\"div\", {\n      class: \"navbar-bg\"\n    }), $jsx(\"div\", {\n      class: \"navbar-inner sliding \" + (ss.params.navbarColorTheme ? \"color-\" + ss.params.navbarColorTheme : '')\n    }, $jsx(\"div\", {\n      class: \"left\"\n    }, $jsx(\"a\", {\n      class: \"link back\"\n    }, $jsx(\"i\", {\n      class: \"icon icon-back\"\n    }), $jsx(\"span\", {\n      class: \"if-not-md\"\n    }, ss.params.pageBackLinkText))), pageTitle && $jsx(\"div\", {\n      class: \"title\"\n    }, pageTitle), ss.params.searchbar && $jsx(\"div\", {\n      class: \"subnavbar\"\n    }, ss.renderSearchbar()))), ss.params.searchbar && $jsx(\"div\", {\n      class: \"searchbar-backdrop\"\n    }), $jsx(\"div\", {\n      class: \"page-content\"\n    }, $jsx(\"div\", {\n      class: \"list smart-select-list-\" + ss.id + \" \" + (ss.params.virtualList ? ' virtual-list' : '') + \" \" + (ss.params.formColorTheme ? \"color-\" + ss.params.formColorTheme : '')\n    }, $jsx(\"ul\", null, !ss.params.virtualList && ss.renderItems(ss.items)))));\n  };\n  _proto.renderPopup = function renderPopup() {\n    var ss = this;\n    if (ss.params.renderPopup) return ss.params.renderPopup.call(ss, ss.items);\n    var pageTitle = ss.params.pageTitle;\n    if (typeof pageTitle === 'undefined') {\n      var $itemTitleEl = ss.$el.find('.item-title');\n      pageTitle = $itemTitleEl.length ? $itemTitleEl.text().trim() : '';\n    }\n    var cssClass = ss.params.cssClass || '';\n    return $jsx(\"div\", {\n      class: \"popup smart-select-popup \" + cssClass + \" \" + (ss.params.popupTabletFullscreen ? 'popup-tablet-fullscreen' : ''),\n      \"data-select-name\": ss.selectName\n    }, $jsx(\"div\", {\n      class: \"view\"\n    }, $jsx(\"div\", {\n      class: \"page smart-select-page \" + (ss.params.searchbar ? 'page-with-subnavbar' : ''),\n      \"data-name\": \"smart-select-page\"\n    }, $jsx(\"div\", {\n      class: \"navbar \" + (ss.params.navbarColorTheme ? \"color-\" + ss.params.navbarColorTheme : '')\n    }, $jsx(\"div\", {\n      class: \"navbar-bg\"\n    }), $jsx(\"div\", {\n      class: \"navbar-inner sliding\"\n    }, pageTitle && $jsx(\"div\", {\n      class: \"title\"\n    }, pageTitle), $jsx(\"div\", {\n      class: \"right\"\n    }, $jsx(\"a\", {\n      class: \"link popup-close\",\n      \"data-popup\": \".smart-select-popup[data-select-name='\" + ss.selectName + \"']\"\n    }, ss.params.popupCloseLinkText)), ss.params.searchbar && $jsx(\"div\", {\n      class: \"subnavbar\"\n    }, ss.renderSearchbar()))), ss.params.searchbar && $jsx(\"div\", {\n      class: \"searchbar-backdrop\"\n    }), $jsx(\"div\", {\n      class: \"page-content\"\n    }, $jsx(\"div\", {\n      class: \"list smart-select-list-\" + ss.id + \" \" + (ss.params.virtualList ? ' virtual-list' : '') + \" \" + (ss.params.formColorTheme ? \"color-\" + ss.params.formColorTheme : '')\n    }, $jsx(\"ul\", null, !ss.params.virtualList && ss.renderItems(ss.items)))))));\n  };\n  _proto.renderSheet = function renderSheet() {\n    var ss = this;\n    if (ss.params.renderSheet) return ss.params.renderSheet.call(ss, ss.items);\n    var cssClass = ss.params.cssClass; // prettier-ignore\n\n    return $jsx(\"div\", {\n      class: \"sheet-modal smart-select-sheet \" + cssClass,\n      \"data-select-name\": ss.selectName\n    }, $jsx(\"div\", {\n      class: \"toolbar toolbar-top \" + (ss.params.toolbarColorTheme ? \"color-\" + ss.params.toolbarColorTheme : '')\n    }, $jsx(\"div\", {\n      class: \"toolbar-inner\"\n    }, $jsx(\"div\", {\n      class: \"left\"\n    }), $jsx(\"div\", {\n      class: \"right\"\n    }, $jsx(\"a\", {\n      class: \"link sheet-close\"\n    }, ss.params.sheetCloseLinkText)))), $jsx(\"div\", {\n      class: \"sheet-modal-inner\"\n    }, $jsx(\"div\", {\n      class: \"page-content\"\n    }, $jsx(\"div\", {\n      class: \"list smart-select-list-\" + ss.id + \" \" + (ss.params.virtualList ? ' virtual-list' : '') + \" \" + (ss.params.formColorTheme ? \"color-\" + ss.params.formColorTheme : '')\n    }, $jsx(\"ul\", null, !ss.params.virtualList && ss.renderItems(ss.items))))));\n  };\n  _proto.renderPopover = function renderPopover() {\n    var ss = this;\n    if (ss.params.renderPopover) return ss.params.renderPopover.call(ss, ss.items);\n    var cssClass = ss.params.cssClass; // prettier-ignore\n\n    return $jsx(\"div\", {\n      class: \"popover smart-select-popover \" + cssClass,\n      \"data-select-name\": ss.selectName\n    }, $jsx(\"div\", {\n      class: \"popover-inner\"\n    }, $jsx(\"div\", {\n      class: \"list smart-select-list-\" + ss.id + \" \" + (ss.params.virtualList ? ' virtual-list' : '') + \" \" + (ss.params.formColorTheme ? \"color-\" + ss.params.formColorTheme : '')\n    }, $jsx(\"ul\", null, !ss.params.virtualList && ss.renderItems(ss.items)))));\n  };\n  _proto.scrollToSelectedItem = function scrollToSelectedItem() {\n    var ss = this;\n    var params = ss.params,\n      $containerEl = ss.$containerEl;\n    if (!ss.opened) return ss;\n    if (params.virtualList) {\n      var selectedIndex;\n      ss.vl.items.forEach(function (item, index) {\n        if (typeof selectedIndex === 'undefined' && item.selected) {\n          selectedIndex = index;\n        }\n      });\n      if (typeof selectedIndex !== 'undefined') {\n        ss.vl.scrollToItem(selectedIndex);\n      }\n    } else {\n      var $selectedItemEl = $containerEl.find('input:checked').parents('li');\n      if (!$selectedItemEl.length) return ss;\n      var $scrollableEl = $containerEl.find('.page-content, .popover-inner');\n      if (!$scrollableEl.length) return ss;\n      $scrollableEl.scrollTop($selectedItemEl.offset().top - $scrollableEl.offset().top - parseInt($scrollableEl.css('padding-top'), 10));\n    }\n    return ss;\n  };\n  _proto.onOpen = function onOpen(type, containerEl) {\n    var ss = this;\n    var app = ss.app;\n    var $containerEl = $(containerEl);\n    ss.$containerEl = $containerEl;\n    ss.openedIn = type;\n    ss.opened = true; // Init VL\n\n    if (ss.params.virtualList) {\n      ss.vl = app.virtualList.create({\n        el: $containerEl.find('.virtual-list'),\n        items: ss.items,\n        renderItem: ss.renderItem.bind(ss),\n        height: ss.params.virtualListHeight,\n        searchByItem: function searchByItem(query, item) {\n          if (item.text && item.text.toLowerCase().indexOf(query.trim().toLowerCase()) >= 0) return true;\n          return false;\n        }\n      });\n    }\n    if (ss.params.scrollToSelectedItem) {\n      ss.scrollToSelectedItem();\n    } // Init SB\n\n    if (ss.params.searchbar) {\n      var $searchbarEl = $containerEl.find('.searchbar');\n      if (type === 'page' && app.theme === 'ios') {\n        $searchbarEl = $(app.navbar.getElByPage($containerEl)).find('.searchbar');\n      }\n      if (ss.params.appendSearchbarNotFound && (type === 'page' || type === 'popup')) {\n        var $notFoundEl = null;\n        if (typeof ss.params.appendSearchbarNotFound === 'string') {\n          $notFoundEl = $(\"<div class=\\\"block searchbar-not-found\\\">\" + ss.params.appendSearchbarNotFound + \"</div>\");\n        } else if (typeof ss.params.appendSearchbarNotFound === 'boolean') {\n          $notFoundEl = $('<div class=\"block searchbar-not-found\">Nothing found</div>');\n        } else {\n          $notFoundEl = ss.params.appendSearchbarNotFound;\n        }\n        if ($notFoundEl) {\n          $containerEl.find('.page-content').append($notFoundEl[0]);\n        }\n      }\n      var searchbarParams = extend({\n        el: $searchbarEl,\n        backdropEl: $containerEl.find('.searchbar-backdrop'),\n        searchContainer: \".smart-select-list-\" + ss.id,\n        searchIn: '.item-title'\n      }, typeof ss.params.searchbar === 'object' ? ss.params.searchbar : {});\n      ss.searchbar = app.searchbar.create(searchbarParams);\n    } // Check for max length\n\n    if (ss.maxLength) {\n      ss.checkMaxLength();\n    } // Close on select\n\n    if (ss.params.closeOnSelect) {\n      ss.$containerEl.find(\"input[type=\\\"radio\\\"][name=\\\"\" + ss.inputName + \"\\\"]:checked\").parents('label').once('click', function () {\n        ss.close();\n      });\n    } // Attach input events\n\n    ss.attachInputsEvents();\n    ss.$el.trigger('smartselect:open');\n    ss.emit('local::open smartSelectOpen', ss);\n  };\n  _proto.onOpened = function onOpened() {\n    var ss = this;\n    ss.$el.trigger('smartselect:opened');\n    ss.emit('local::opened smartSelectOpened', ss);\n  };\n  _proto.onClose = function onClose() {\n    var ss = this;\n    if (ss.destroyed) return; // Destroy VL\n\n    if (ss.vl && ss.vl.destroy) {\n      ss.vl.destroy();\n      ss.vl = null;\n      delete ss.vl;\n    } // Destroy SB\n\n    if (ss.searchbar && ss.searchbar.destroy) {\n      ss.searchbar.destroy();\n      ss.searchbar = null;\n      delete ss.searchbar;\n    } // Detach events\n\n    ss.detachInputsEvents();\n    ss.$el.trigger('smartselect:close');\n    ss.emit('local::close smartSelectClose', ss);\n  };\n  _proto.onClosed = function onClosed() {\n    var ss = this;\n    if (ss.destroyed) return;\n    ss.opened = false;\n    ss.$containerEl = null;\n    delete ss.$containerEl;\n    ss.$el.trigger('smartselect:closed');\n    ss.emit('local::closed smartSelectClosed', ss);\n  };\n  _proto.openPage = function openPage() {\n    var ss = this;\n    if (ss.opened) return ss;\n    ss.getItemsData();\n    var pageHtml = ss.renderPage(ss.items);\n    ss.view.router.navigate({\n      url: ss.url,\n      route: {\n        content: pageHtml,\n        path: ss.url,\n        on: {\n          pageBeforeIn: function pageBeforeIn(e, page) {\n            ss.onOpen('page', page.el);\n          },\n          pageAfterIn: function pageAfterIn(e, page) {\n            ss.onOpened('page', page.el);\n          },\n          pageBeforeOut: function pageBeforeOut(e, page) {\n            ss.onClose('page', page.el);\n          },\n          pageAfterOut: function pageAfterOut(e, page) {\n            ss.onClosed('page', page.el);\n          }\n        }\n      }\n    });\n    return ss;\n  };\n  _proto.openPopup = function openPopup() {\n    var ss = this;\n    if (ss.opened) return ss;\n    ss.getItemsData();\n    var popupHtml = ss.renderPopup(ss.items);\n    var popupParams = {\n      content: popupHtml,\n      push: ss.params.popupPush,\n      swipeToClose: ss.params.popupSwipeToClose,\n      on: {\n        popupOpen: function popupOpen(popup) {\n          ss.onOpen('popup', popup.el);\n        },\n        popupOpened: function popupOpened(popup) {\n          ss.onOpened('popup', popup.el);\n        },\n        popupClose: function popupClose(popup) {\n          ss.onClose('popup', popup.el);\n        },\n        popupClosed: function popupClosed(popup) {\n          ss.onClosed('popup', popup.el);\n        }\n      }\n    };\n    if (ss.params.routableModals && ss.view) {\n      ss.view.router.navigate({\n        url: ss.url,\n        route: {\n          path: ss.url,\n          popup: popupParams\n        }\n      });\n    } else {\n      ss.modal = ss.app.popup.create(popupParams).open();\n    }\n    return ss;\n  };\n  _proto.openSheet = function openSheet() {\n    var ss = this;\n    if (ss.opened) return ss;\n    ss.getItemsData();\n    var sheetHtml = ss.renderSheet(ss.items);\n    var sheetParams = {\n      content: sheetHtml,\n      backdrop: ss.params.sheetBackdrop,\n      scrollToEl: ss.$el,\n      closeByOutsideClick: true,\n      push: ss.params.sheetPush,\n      swipeToClose: ss.params.sheetSwipeToClose,\n      on: {\n        sheetOpen: function sheetOpen(sheet) {\n          ss.onOpen('sheet', sheet.el);\n        },\n        sheetOpened: function sheetOpened(sheet) {\n          ss.onOpened('sheet', sheet.el);\n        },\n        sheetClose: function sheetClose(sheet) {\n          ss.onClose('sheet', sheet.el);\n        },\n        sheetClosed: function sheetClosed(sheet) {\n          ss.onClosed('sheet', sheet.el);\n        }\n      }\n    };\n    if (ss.params.routableModals && ss.view) {\n      ss.view.router.navigate({\n        url: ss.url,\n        route: {\n          path: ss.url,\n          sheet: sheetParams\n        }\n      });\n    } else {\n      ss.modal = ss.app.sheet.create(sheetParams).open();\n    }\n    return ss;\n  };\n  _proto.openPopover = function openPopover() {\n    var ss = this;\n    if (ss.opened) return ss;\n    ss.getItemsData();\n    var popoverHtml = ss.renderPopover(ss.items);\n    var popoverParams = {\n      content: popoverHtml,\n      targetEl: ss.$el,\n      on: {\n        popoverOpen: function popoverOpen(popover) {\n          ss.onOpen('popover', popover.el);\n        },\n        popoverOpened: function popoverOpened(popover) {\n          ss.onOpened('popover', popover.el);\n        },\n        popoverClose: function popoverClose(popover) {\n          ss.onClose('popover', popover.el);\n        },\n        popoverClosed: function popoverClosed(popover) {\n          ss.onClosed('popover', popover.el);\n        }\n      }\n    };\n    if (ss.params.routableModals && ss.view) {\n      ss.view.router.navigate({\n        url: ss.url,\n        route: {\n          path: ss.url,\n          popover: popoverParams\n        }\n      });\n    } else {\n      ss.modal = ss.app.popover.create(popoverParams).open();\n    }\n    return ss;\n  };\n  _proto.open = function open(type) {\n    var ss = this;\n    if (ss.opened) return ss;\n    var prevented = false;\n    function prevent() {\n      prevented = true;\n    }\n    if (ss.$el) {\n      ss.$el.trigger('smartselect:beforeopen', {\n        prevent: prevent\n      });\n    }\n    ss.emit('local::beforeOpen smartSelectBeforeOpen', ss, prevent);\n    if (prevented) return ss;\n    var openIn = type || ss.params.openIn;\n    ss[\"open\" + openIn.split('').map(function (el, index) {\n      if (index === 0) return el.toUpperCase();\n      return el;\n    }).join('')]();\n    return ss;\n  };\n  _proto.close = function close() {\n    var ss = this;\n    if (!ss.opened) return ss;\n    if (ss.params.routableModals && ss.view || ss.openedIn === 'page') {\n      ss.view.router.back();\n    } else {\n      ss.modal.once('modalClosed', function () {\n        nextTick(function () {\n          if (ss.destroyed) return;\n          ss.modal.destroy();\n          delete ss.modal;\n        });\n      });\n      ss.modal.close();\n    }\n    return ss;\n  };\n  _proto.init = function init() {\n    var ss = this;\n    ss.attachEvents();\n    ss.setValueText();\n  };\n  _proto.destroy = function destroy() {\n    var ss = this;\n    ss.emit('local::beforeDestroy smartSelectBeforeDestroy', ss);\n    ss.$el.trigger('smartselect:beforedestroy');\n    ss.detachEvents();\n    delete ss.$el[0].f7SmartSelect;\n    deleteProps(ss);\n    ss.destroyed = true;\n  };\n  _createClass(SmartSelect, [{\n    key: \"view\",\n    get: function get() {\n      var params = this.params,\n        $el = this.$el;\n      var view;\n      if (params.view) {\n        view = params.view;\n      }\n      if (!view) {\n        view = $el.parents('.view').length && $el.parents('.view')[0].f7View;\n      }\n      if (!view && params.openIn === 'page') {\n        throw Error('Smart Select requires initialized View');\n      }\n      return view;\n    }\n  }]);\n  return SmartSelect;\n}(Framework7Class);\nexport default SmartSelect;","map":null,"metadata":{},"sourceType":"module"}