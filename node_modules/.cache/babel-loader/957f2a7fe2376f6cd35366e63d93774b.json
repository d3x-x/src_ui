{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef, useRef, useImperativeHandle } from 'react';\nimport { useIsomorphicLayoutEffect } from '../shared/use-isomorphic-layout-effect';\nimport { classNames, getExtraAttrs, emit } from '../shared/utils';\nimport { colorClasses } from '../shared/mixins';\nimport { f7ready, f7 } from '../shared/f7';\nimport { watchProp } from '../shared/watch-prop';\nvar ListIndex = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _f7ListIndex = useRef(null);\n  var className = props.className,\n    id = props.id,\n    style = props.style,\n    children = props.children,\n    _props$init = props.init,\n    init = _props$init === void 0 ? true : _props$init,\n    listEl = props.listEl,\n    _props$indexes = props.indexes,\n    indexes = _props$indexes === void 0 ? 'auto' : _props$indexes,\n    _props$scrollList = props.scrollList,\n    scrollList = _props$scrollList === void 0 ? true : _props$scrollList,\n    _props$label = props.label,\n    label = _props$label === void 0 ? false : _props$label,\n    _props$iosItemHeight = props.iosItemHeight,\n    iosItemHeight = _props$iosItemHeight === void 0 ? 14 : _props$iosItemHeight,\n    _props$mdItemHeight = props.mdItemHeight,\n    mdItemHeight = _props$mdItemHeight === void 0 ? 14 : _props$mdItemHeight,\n    _props$auroraItemHeig = props.auroraItemHeight,\n    auroraItemHeight = _props$auroraItemHeig === void 0 ? 14 : _props$auroraItemHeig;\n  var extraAttrs = getExtraAttrs(props);\n  var elRef = useRef(null);\n  var update = function update() {\n    if (!_f7ListIndex.current) return;\n    _f7ListIndex.current.update();\n  };\n  var scrollListToIndex = function scrollListToIndex(indexContent) {\n    if (!_f7ListIndex.current) return;\n    _f7ListIndex.current.scrollListToIndex(indexContent);\n  };\n  useImperativeHandle(ref, function () {\n    return {\n      el: elRef.current,\n      f7ListIndex: function f7ListIndex() {\n        return _f7ListIndex.current;\n      },\n      update: update,\n      scrollListToIndex: scrollListToIndex\n    };\n  });\n  watchProp(indexes, function (newValue) {\n    if (!_f7ListIndex.current) return;\n    _f7ListIndex.current.params.indexes = newValue;\n    update();\n  });\n  var onMount = function onMount() {\n    if (!init) return;\n    f7ready(function () {\n      _f7ListIndex.current = f7.listIndex.create({\n        el: elRef.current,\n        listEl: listEl,\n        indexes: indexes,\n        iosItemHeight: iosItemHeight,\n        mdItemHeight: mdItemHeight,\n        auroraItemHeight: auroraItemHeight,\n        scrollList: scrollList,\n        label: label,\n        on: {\n          select: function select(index, itemContent, itemIndex) {\n            emit(props, 'listIndexSelect', itemContent, itemIndex);\n          }\n        }\n      });\n    });\n  };\n  var onDestroy = function onDestroy() {\n    if (_f7ListIndex.current && _f7ListIndex.current.destroy) {\n      _f7ListIndex.current.destroy();\n    }\n    _f7ListIndex.current = null;\n  };\n  useIsomorphicLayoutEffect(function () {\n    onMount();\n    return onDestroy;\n  }, []);\n  var classes = classNames(className, 'list-index', colorClasses(props));\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    id: id,\n    style: style,\n    className: classes,\n    ref: elRef\n  }, extraAttrs), children);\n});\nListIndex.displayName = 'f7-list-index';\nexport default ListIndex;","map":null,"metadata":{},"sourceType":"module"}