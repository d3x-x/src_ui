{"ast":null,"code":"import { forwardRef, useRef, useImperativeHandle } from 'react';\nimport { useIsomorphicLayoutEffect } from '../shared/use-isomorphic-layout-effect';\nimport { extend, emit } from '../shared/utils';\nimport { watchProp } from '../shared/watch-prop';\nimport { f7ready, f7 } from '../shared/f7';\nvar PhotoBrowser = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _f7PhotoBrowser = useRef(null);\n  var _props$init = props.init,\n    init = _props$init === void 0 ? true : _props$init,\n    params = props.params,\n    photos = props.photos,\n    _props$exposition = props.exposition,\n    exposition = _props$exposition === void 0 ? true : _props$exposition,\n    _props$expositionHide = props.expositionHideCaptions,\n    expositionHideCaptions = _props$expositionHide === void 0 ? false : _props$expositionHide,\n    type = props.type,\n    _props$navbar = props.navbar,\n    navbar = _props$navbar === void 0 ? true : _props$navbar,\n    _props$toolbar = props.toolbar,\n    toolbar = _props$toolbar === void 0 ? true : _props$toolbar,\n    theme = props.theme,\n    captionsTheme = props.captionsTheme,\n    iconsColor = props.iconsColor,\n    _props$swipeToClose = props.swipeToClose,\n    swipeToClose = _props$swipeToClose === void 0 ? true : _props$swipeToClose,\n    pageBackLinkText = props.pageBackLinkText,\n    popupCloseLinkText = props.popupCloseLinkText,\n    navbarOfText = props.navbarOfText,\n    navbarShowCount = props.navbarShowCount,\n    swiper = props.swiper,\n    url = props.url,\n    _props$routableModals = props.routableModals,\n    routableModals = _props$routableModals === void 0 ? false : _props$routableModals,\n    _props$virtualSlides = props.virtualSlides,\n    virtualSlides = _props$virtualSlides === void 0 ? true : _props$virtualSlides,\n    view = props.view,\n    renderNavbar = props.renderNavbar,\n    renderToolbar = props.renderToolbar,\n    renderCaption = props.renderCaption,\n    renderObject = props.renderObject,\n    renderLazyPhoto = props.renderLazyPhoto,\n    renderPhoto = props.renderPhoto,\n    renderPage = props.renderPage,\n    renderPopup = props.renderPopup,\n    renderStandalone = props.renderStandalone;\n  var open = function open(index) {\n    return _f7PhotoBrowser.current.open(index);\n  };\n  var close = function close() {\n    return _f7PhotoBrowser.current.close();\n  };\n  var expositionToggle = function expositionToggle() {\n    return _f7PhotoBrowser.current.expositionToggle();\n  };\n  var expositionEnable = function expositionEnable() {\n    return _f7PhotoBrowser.current.expositionEnable();\n  };\n  var expositionDisable = function expositionDisable() {\n    return _f7PhotoBrowser.current.expositionDisable();\n  };\n  useImperativeHandle(ref, function () {\n    return {\n      f7PhotoBrowser: function f7PhotoBrowser() {\n        return _f7PhotoBrowser.current;\n      },\n      open: open,\n      close: close,\n      expositionToggle: expositionToggle,\n      expositionEnable: expositionEnable,\n      expositionDisable: expositionDisable\n    };\n  });\n  watchProp(photos, function (newValue) {\n    var pb = _f7PhotoBrowser.current;\n    if (!pb) return;\n    pb.params.photos = newValue;\n    if (pb.opened && pb.swiper) {\n      pb.swiper.update();\n    }\n  });\n  var onMount = function onMount() {\n    if (!init) return;\n    f7ready(function () {\n      var paramsComputed;\n      if (typeof params !== 'undefined') {\n        paramsComputed = params;\n      } else {\n        paramsComputed = {\n          photos: photos,\n          exposition: exposition,\n          expositionHideCaptions: expositionHideCaptions,\n          type: type,\n          navbar: navbar,\n          toolbar: toolbar,\n          theme: theme,\n          captionsTheme: captionsTheme,\n          iconsColor: iconsColor,\n          swipeToClose: swipeToClose,\n          pageBackLinkText: pageBackLinkText,\n          popupCloseLinkText: popupCloseLinkText,\n          navbarOfText: navbarOfText,\n          navbarShowCount: navbarShowCount,\n          swiper: swiper,\n          url: url,\n          routableModals: routableModals,\n          virtualSlides: virtualSlides,\n          view: view,\n          renderNavbar: renderNavbar,\n          renderToolbar: renderToolbar,\n          renderCaption: renderCaption,\n          renderObject: renderObject,\n          renderLazyPhoto: renderLazyPhoto,\n          renderPhoto: renderPhoto,\n          renderPage: renderPage,\n          renderPopup: renderPopup,\n          renderStandalone: renderStandalone\n        };\n      }\n      Object.keys(paramsComputed).forEach(function (param) {\n        if (typeof paramsComputed[param] === 'undefined' || paramsComputed[param] === '') delete paramsComputed[param];\n      });\n      paramsComputed = extend({}, paramsComputed, {\n        on: {\n          open: function open() {\n            emit(props, 'photoBrowserOpen');\n          },\n          close: function close() {\n            emit(props, 'photoBrowserClose');\n          },\n          opened: function opened() {\n            emit(props, 'photoBrowserOpened');\n          },\n          closed: function closed() {\n            emit(props, 'photoBrowserClosed');\n          },\n          swipeToClose: function swipeToClose() {\n            emit(props, 'photoBrowserSwipeToClose');\n          }\n        }\n      });\n      _f7PhotoBrowser.current = f7.photoBrowser.create(paramsComputed);\n    });\n  };\n  var onDestroy = function onDestroy() {\n    if (_f7PhotoBrowser.current && _f7PhotoBrowser.current.destroy) _f7PhotoBrowser.current.destroy();\n    _f7PhotoBrowser.current = null;\n  };\n  useIsomorphicLayoutEffect(function () {\n    onMount();\n    return onDestroy;\n  }, []);\n  return null;\n});\nPhotoBrowser.displayName = 'f7-photo-browser';\nexport default PhotoBrowser;","map":null,"metadata":{},"sourceType":"module"}