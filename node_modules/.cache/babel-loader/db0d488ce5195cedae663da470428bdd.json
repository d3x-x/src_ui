{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef, useRef, useImperativeHandle } from 'react';\nimport { classNames, getExtraAttrs } from '../shared/utils';\nimport { colorClasses } from '../shared/mixins';\nvar Segmented = /*#__PURE__*/forwardRef(function (props, ref) {\n  var className = props.className,\n    id = props.id,\n    style = props.style,\n    children = props.children,\n    raised = props.raised,\n    raisedIos = props.raisedIos,\n    raisedMd = props.raisedMd,\n    raisedAurora = props.raisedAurora,\n    round = props.round,\n    roundIos = props.roundIos,\n    roundMd = props.roundMd,\n    roundAurora = props.roundAurora,\n    strong = props.strong,\n    strongIos = props.strongIos,\n    strongMd = props.strongMd,\n    strongAurora = props.strongAurora,\n    _props$tag = props.tag,\n    tag = _props$tag === void 0 ? 'div' : _props$tag;\n  var extraAttrs = getExtraAttrs(props);\n  var elRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return {\n      el: elRef.current\n    };\n  });\n  var classes = classNames(className, {\n    segmented: true,\n    'segmented-raised': raised,\n    'segmented-raised-ios': raisedIos,\n    'segmented-raised-aurora': raisedAurora,\n    'segmented-raised-md': raisedMd,\n    'segmented-round': round,\n    'segmented-round-ios': roundIos,\n    'segmented-round-aurora': roundAurora,\n    'segmented-round-md': roundMd,\n    'segmented-strong': strong,\n    'segmented-strong-ios': strongIos,\n    'segmented-strong-md': strongMd,\n    'segmented-strong-aurora': strongAurora\n  }, colorClasses(props));\n  var SegmentedTag = tag;\n  return /*#__PURE__*/React.createElement(SegmentedTag, _extends({\n    id: id,\n    style: style,\n    className: classes,\n    ref: elRef\n  }, extraAttrs), children, (strong || strongIos || strongMd || strongAurora) && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"segmented-highlight\"\n  }));\n});\nSegmented.displayName = 'f7-segmented';\nexport default Segmented;","map":null,"metadata":{},"sourceType":"module"}