{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef, useRef, useImperativeHandle, useState, useContext } from 'react';\nimport { useIsomorphicLayoutEffect } from '../shared/use-isomorphic-layout-effect';\nimport { classNames, getExtraAttrs, getComponentId } from '../shared/utils';\nimport { colorClasses } from '../shared/mixins';\nimport { f7ready, f7routers, f7, f7events } from '../shared/f7';\nimport { useTab } from '../shared/use-tab';\nimport { RouterContext } from '../shared/router-context';\nimport { useAsyncComponent } from '../shared/use-async-component';\nvar Tab = /*#__PURE__*/forwardRef(function (props, ref) {\n  var className = props.className,\n    id = props.id,\n    style = props.style,\n    children = props.children,\n    tabActive = props.tabActive;\n  var extraAttrs = getExtraAttrs(props);\n  var elRef = useRef(null);\n  var routerData = useRef(null);\n  var routerContext = useContext(RouterContext);\n  var initialTabContent = null;\n  if (!routerData.current && routerContext && routerContext.route && routerContext.route.route && routerContext.route.route.tab && routerContext.route.route.tab.id === id) {\n    var _routerContext$route$ = routerContext.route.route.tab,\n      component = _routerContext$route$.component,\n      asyncComponent = _routerContext$route$.asyncComponent,\n      tabRouteOptions = _routerContext$route$.options;\n    if (component || asyncComponent) {\n      var parentProps = routerContext.route.route.options && routerContext.route.route.options.props;\n      initialTabContent = {\n        id: getComponentId(),\n        component: component || asyncComponent,\n        isAsync: !!asyncComponent,\n        props: _extends({}, parentProps || {}, tabRouteOptions && tabRouteOptions.props || {}, {\n          f7router: routerContext.router,\n          f7route: routerContext.route\n        }, routerContext.route.params)\n      };\n    }\n  }\n  var _useState = useState(initialTabContent || null),\n    tabContent = _useState[0],\n    setTabContent = _useState[1];\n  useImperativeHandle(ref, function () {\n    return {\n      el: elRef.current\n    };\n  });\n  if (f7 && !routerData.current) {\n    routerData.current = {\n      setTabContent: setTabContent\n    };\n    f7routers.tabs.push(routerData.current);\n  }\n  var onMount = function onMount() {\n    if (elRef.current && initialTabContent) {\n      elRef.current.f7RouterTabLoaded = true;\n    }\n    f7ready(function () {\n      if (!routerData.current) {\n        routerData.current = {\n          el: elRef.current,\n          setTabContent: setTabContent\n        };\n        f7routers.tabs.push(routerData.current);\n      } else {\n        routerData.current.el = elRef.current;\n      }\n    });\n  };\n  var onDestroy = function onDestroy() {\n    if (!routerData.current) return;\n    f7routers.tabs.splice(f7routers.tabs.indexOf(routerData.current), 1);\n    routerData.current = null;\n  };\n  useIsomorphicLayoutEffect(function () {\n    onMount();\n    return onDestroy;\n  }, []);\n  useIsomorphicLayoutEffect(function () {\n    if (!routerData.current || !f7) return;\n    f7events.emit('tabRouterDidUpdate', routerData.current);\n  });\n  useTab(elRef, props);\n  var classes = classNames(className, 'tab', {\n    'tab-active': tabActive\n  }, colorClasses(props));\n  var renderChildren = function renderChildren() {\n    if (!tabContent) return children;\n    if (tabContent.isAsync) {\n      return useAsyncComponent(tabContent.component, tabContent.props, tabContent.id);\n    }\n    var TabContent = tabContent.component;\n    return /*#__PURE__*/React.createElement(TabContent, _extends({\n      key: tabContent.id\n    }, tabContent.props));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    id: id,\n    style: style,\n    className: classes,\n    ref: elRef\n  }, extraAttrs), renderChildren());\n});\nTab.displayName = 'f7-tab';\nexport default Tab;","map":null,"metadata":{},"sourceType":"module"}