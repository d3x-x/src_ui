{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef, useRef, useImperativeHandle } from 'react';\nimport { classNames, getExtraAttrs, getSlots, emit } from '../shared/utils';\nimport { colorClasses } from '../shared/mixins';\nvar Message = /*#__PURE__*/forwardRef(function (props, ref) {\n  var className = props.className,\n    id = props.id,\n    style = props.style,\n    text = props.text,\n    name = props.name,\n    avatar = props.avatar,\n    _props$type = props.type,\n    type = _props$type === void 0 ? 'sent' : _props$type,\n    image = props.image,\n    header = props.header,\n    footer = props.footer,\n    textHeader = props.textHeader,\n    textFooter = props.textFooter,\n    first = props.first,\n    last = props.last,\n    tail = props.tail,\n    sameName = props.sameName,\n    sameHeader = props.sameHeader,\n    sameFooter = props.sameFooter,\n    sameAvatar = props.sameAvatar,\n    typing = props.typing;\n  var extraAttrs = getExtraAttrs(props);\n  var elRef = useRef(null);\n  var onClick = function onClick(event) {\n    emit(props, 'click', event);\n  };\n  var onNameClick = function onNameClick(event) {\n    emit(props, 'clickName', event);\n  };\n  var onTextClick = function onTextClick(event) {\n    emit(props, 'clickText', event);\n  };\n  var onAvatarClick = function onAvatarClick(event) {\n    emit(props, 'clickAvatar', event);\n  };\n  var onHeaderClick = function onHeaderClick(event) {\n    emit(props, 'clickHeader', event);\n  };\n  var onFooterClick = function onFooterClick(event) {\n    emit(props, 'clickFooter', event);\n  };\n  var onBubbleClick = function onBubbleClick(event) {\n    emit(props, 'clickBubble', event);\n  };\n  useImperativeHandle(ref, function () {\n    return {\n      el: elRef.current\n    };\n  });\n  var slots = getSlots(props);\n  var classes = classNames(className, 'message', {\n    'message-sent': type === 'sent',\n    'message-received': type === 'received',\n    'message-typing': typing,\n    'message-first': first,\n    'message-last': last,\n    'message-tail': tail,\n    'message-same-name': sameName,\n    'message-same-header': sameHeader,\n    'message-same-footer': sameFooter,\n    'message-same-avatar': sameAvatar\n  }, colorClasses(props));\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    id: id,\n    style: style,\n    className: classes,\n    ref: elRef\n  }, extraAttrs, {\n    onClick: onClick\n  }), slots.start, (avatar || slots.avatar) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-avatar\",\n    style: {\n      backgroundImage: avatar && \"url(\" + avatar + \")\"\n    },\n    onClick: onAvatarClick\n  }, slots.avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-content\"\n  }, slots['content-start'], (slots.name || name) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-name\",\n    onClick: onNameClick\n  }, name, slots.name), (slots.header || header) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-header\",\n    onClick: onHeaderClick\n  }, header, slots.header), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-bubble\",\n    onClick: onBubbleClick\n  }, slots['bubble-start'], (slots.image || image) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-image\"\n  }, slots.image || /*#__PURE__*/React.createElement(\"img\", {\n    src: image\n  })), (slots['text-header'] || textHeader) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-text-header\"\n  }, textHeader, slots['text-header']), (slots.text || text || typing) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-text\",\n    onClick: onTextClick\n  }, text, slots.text, typing && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-typing-indicator\"\n  }, /*#__PURE__*/React.createElement(\"div\", null), /*#__PURE__*/React.createElement(\"div\", null), /*#__PURE__*/React.createElement(\"div\", null))), (slots['text-footer'] || textFooter) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-text-footer\"\n  }, textFooter, slots['text-footer']), slots['bubble-end'], slots.default), (slots.footer || footer) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-footer\",\n    onClick: onFooterClick\n  }, footer, slots.footer), slots['content-end']), slots.end);\n});\nMessage.displayName = 'f7-message';\nexport default Message;","map":null,"metadata":{},"sourceType":"module"}