{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef, useRef, useImperativeHandle } from 'react';\nimport { classNames, getExtraAttrs, emit } from '../shared/utils';\nimport { colorClasses, routerAttrs, routerClasses, actionsAttrs, actionsClasses } from '../shared/mixins';\nimport { useRouteProps } from '../shared/use-route-props';\nvar MenuDropdownItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var className = props.className,\n    id = props.id,\n    style = props.style,\n    children = props.children,\n    link = props.link,\n    href = props.href,\n    target = props.target,\n    text = props.text,\n    divider = props.divider,\n    menuClose = props.menuClose;\n  var extraAttrs = getExtraAttrs(props);\n  var elRef = useRef(null);\n  var onClick = function onClick(e) {\n    emit(props, 'click', e);\n  };\n  useImperativeHandle(ref, function () {\n    return {\n      el: elRef.current\n    };\n  });\n  useRouteProps(elRef, props);\n  var isLink = link || href || href === '';\n  var Tag = isLink ? 'a' : 'div';\n  var classes = classNames({\n    'menu-dropdown-link': isLink && !divider,\n    'menu-dropdown-item': !isLink && !divider,\n    'menu-dropdown-divider': divider\n  }, className, colorClasses(props), routerClasses(props), actionsClasses(props), {\n    'menu-close': typeof menuClose === 'undefined'\n  });\n  var hrefComputed = href;\n  if (typeof hrefComputed === 'undefined' && link) hrefComputed = '#';\n  var attrs = _extends({\n    href: hrefComputed,\n    target: target\n  }, routerAttrs(props), actionsAttrs(props));\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    className: classes,\n    id: id,\n    style: style,\n    ref: elRef\n  }, attrs, extraAttrs, {\n    onClick: onClick\n  }), text, children);\n});\nMenuDropdownItem.displayName = 'f7-menu-dropdown-item';\nexport default MenuDropdownItem;","map":null,"metadata":{},"sourceType":"module"}