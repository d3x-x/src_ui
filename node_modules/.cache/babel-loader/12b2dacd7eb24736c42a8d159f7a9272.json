{"ast":null,"code":"function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\n/* eslint-disable no-underscore-dangle */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { extend, nextFrame } from '../../shared/utils';\nimport { getDevice } from '../../shared/get-device';\nimport { getSupport } from '../../shared/get-support';\nimport Framework7Class from '../../shared/class';\nimport EventsClass from '../../shared/events-class';\nimport ConstructorMethods from '../../shared/constructor-methods';\nimport ModalMethods from '../../shared/modal-methods';\nimport $ from '../../shared/dom7';\nimport loadModule from './load-module';\nvar Framework7 = /*#__PURE__*/function (_Framework7Class) {\n  _inheritsLoose(Framework7, _Framework7Class);\n  function Framework7(params) {\n    var _this;\n    if (params === void 0) {\n      params = {};\n    }\n    _this = _Framework7Class.call(this, params) || this; // eslint-disable-next-line\n\n    if (Framework7.instance && typeof window !== 'undefined') {\n      throw new Error(\"Framework7 is already initialized and can't be initialized more than once\");\n    }\n    var device = getDevice({\n      userAgent: params.userAgent || undefined\n    });\n    var support = getSupport();\n    var passedParams = extend({}, params); // App Instance\n\n    var app = _assertThisInitialized(_this);\n    app.device = device;\n    app.support = support;\n    var w = getWindow();\n    var d = getDocument();\n    Framework7.instance = app; // Default\n\n    var defaults = {\n      version: '1.0.0',\n      id: 'io.framework7.myapp',\n      el: 'body',\n      theme: 'auto',\n      language: w.navigator.language,\n      routes: [],\n      name: 'Framework7',\n      lazyModulesPath: null,\n      initOnDeviceReady: true,\n      init: true,\n      autoDarkTheme: false,\n      iosTranslucentBars: true,\n      iosTranslucentModals: true,\n      component: undefined,\n      componentUrl: undefined,\n      userAgent: null,\n      url: null\n    }; // Extend defaults with modules params\n\n    app.useModulesParams(defaults); // Extend defaults with passed params\n\n    app.params = extend(defaults, params);\n    extend(app, {\n      // App Id\n      id: app.params.id,\n      // App Name\n      name: app.params.name,\n      // App version\n      version: app.params.version,\n      // Routes\n      routes: app.params.routes,\n      // Lang\n      language: app.params.language,\n      // Theme\n      theme: function getTheme() {\n        if (app.params.theme === 'auto') {\n          if (device.ios) return 'ios';\n          if (device.desktop && device.electron) return 'aurora';\n          return 'md';\n        }\n        return app.params.theme;\n      }(),\n      // Initially passed parameters\n      passedParams: passedParams,\n      online: w.navigator.onLine\n    });\n    if (params.store) app.params.store = params.store; // Save Root\n\n    if (app.$el && app.$el[0]) {\n      app.$el[0].f7 = app;\n    } // Install Modules\n\n    app.useModules(); // Init Store\n\n    app.initStore(); // Init\n\n    if (app.params.init) {\n      if (device.cordova && app.params.initOnDeviceReady) {\n        $(d).on('deviceready', function () {\n          app.init();\n        });\n      } else {\n        app.init();\n      }\n    } // Return app instance\n\n    return app || _assertThisInitialized(_this);\n  }\n  var _proto = Framework7.prototype;\n  _proto.mount = function mount(rootEl) {\n    var app = this;\n    var window = getWindow();\n    var document = getDocument();\n    var $rootEl = $(rootEl || app.params.el).eq(0);\n    app.$el = $rootEl;\n    if (app.$el && app.$el[0]) {\n      app.el = app.$el[0];\n      app.el.f7 = app;\n      app.rtl = $rootEl.css('direction') === 'rtl';\n    } // Auto Dark Theme\n\n    var DARK = '(prefers-color-scheme: dark)';\n    var LIGHT = '(prefers-color-scheme: light)';\n    app.mq = {};\n    if (window.matchMedia) {\n      app.mq.dark = window.matchMedia(DARK);\n      app.mq.light = window.matchMedia(LIGHT);\n    }\n    app.colorSchemeListener = function colorSchemeListener(_ref) {\n      var matches = _ref.matches,\n        media = _ref.media;\n      if (!matches) {\n        return;\n      }\n      var html = document.querySelector('html');\n      if (media === DARK) {\n        html.classList.add('theme-dark');\n        app.darkTheme = true;\n        app.emit('darkThemeChange', true);\n      } else if (media === LIGHT) {\n        html.classList.remove('theme-dark');\n        app.darkTheme = false;\n        app.emit('darkThemeChange', false);\n      }\n    };\n    app.emit('mount');\n  };\n  _proto.initStore = function initStore() {\n    var app = this;\n    if (typeof app.params.store !== 'undefined' && app.params.store.__store) {\n      app.store = app.params.store;\n    } else {\n      app.store = app.createStore(app.params.store);\n    }\n  };\n  _proto.enableAutoDarkTheme = function enableAutoDarkTheme() {\n    var window = getWindow();\n    var document = getDocument();\n    if (!window.matchMedia) return;\n    var app = this;\n    var html = document.querySelector('html');\n    if (app.mq.dark && app.mq.light) {\n      app.mq.dark.addListener(app.colorSchemeListener);\n      app.mq.light.addListener(app.colorSchemeListener);\n    }\n    if (app.mq.dark && app.mq.dark.matches) {\n      html.classList.add('theme-dark');\n      app.darkTheme = true;\n      app.emit('darkThemeChange', true);\n    } else if (app.mq.light && app.mq.light.matches) {\n      html.classList.remove('theme-dark');\n      app.darkTheme = false;\n      app.emit('darkThemeChange', false);\n    }\n  };\n  _proto.disableAutoDarkTheme = function disableAutoDarkTheme() {\n    var window = getWindow();\n    if (!window.matchMedia) return;\n    var app = this;\n    if (app.mq.dark) app.mq.dark.removeListener(app.colorSchemeListener);\n    if (app.mq.light) app.mq.light.removeListener(app.colorSchemeListener);\n  };\n  _proto.initAppComponent = function initAppComponent(callback) {\n    var app = this;\n    app.router.componentLoader(app.params.component, app.params.componentUrl, {\n      componentOptions: {\n        el: app.$el[0]\n      }\n    }, function (el) {\n      app.$el = $(el);\n      app.$el[0].f7 = app;\n      app.$elComponent = el.f7Component;\n      app.el = app.$el[0];\n      if (callback) callback();\n    }, function () {});\n  };\n  _proto.init = function init(rootEl) {\n    var app = this;\n    app.mount(rootEl);\n    var init = function init() {\n      if (app.initialized) return;\n      app.$el.addClass('framework7-initializing'); // RTL attr\n\n      if (app.rtl) {\n        $('html').attr('dir', 'rtl');\n      } // Auto Dark Theme\n\n      if (app.params.autoDarkTheme) {\n        app.enableAutoDarkTheme();\n      } // Watch for online/offline state\n\n      var window = getWindow();\n      window.addEventListener('offline', function () {\n        app.online = false;\n        app.emit('offline');\n        app.emit('connection', false);\n      });\n      window.addEventListener('online', function () {\n        app.online = true;\n        app.emit('online');\n        app.emit('connection', true);\n      }); // Root class\n\n      app.$el.addClass('framework7-root'); // Theme class\n\n      $('html').removeClass('ios md aurora').addClass(app.theme); // iOS Translucent\n\n      var device = app.device;\n      if (app.params.iosTranslucentBars && app.theme === 'ios' && device.ios) {\n        $('html').addClass('ios-translucent-bars');\n      }\n      if (app.params.iosTranslucentModals && app.theme === 'ios' && device.ios) {\n        $('html').addClass('ios-translucent-modals');\n      } // Init class\n\n      nextFrame(function () {\n        app.$el.removeClass('framework7-initializing');\n      }); // Emit, init other modules\n\n      app.initialized = true;\n      app.emit('init');\n    };\n    if (app.params.component || app.params.componentUrl) {\n      app.initAppComponent(function () {\n        init();\n      });\n    } else {\n      init();\n    }\n    return app;\n  } // eslint-disable-next-line\n  ;\n\n  _proto.loadModule = function loadModule() {\n    return Framework7.loadModule.apply(Framework7, arguments);\n  } // eslint-disable-next-line\n  ;\n\n  _proto.loadModules = function loadModules() {\n    return Framework7.loadModules.apply(Framework7, arguments);\n  };\n  _proto.getVnodeHooks = function getVnodeHooks(hook, id) {\n    var app = this;\n    if (!app.vnodeHooks || !app.vnodeHooks[hook]) return [];\n    return app.vnodeHooks[hook][id] || [];\n  } // eslint-disable-next-line\n  ;\n\n  _createClass(Framework7, [{\n    key: \"$\",\n    get: function get() {\n      return $;\n    }\n  }], [{\n    key: \"Dom7\",\n    get: function get() {\n      return $;\n    }\n  }, {\n    key: \"$\",\n    get: function get() {\n      return $;\n    }\n  }, {\n    key: \"device\",\n    get: function get() {\n      return getDevice();\n    }\n  }, {\n    key: \"support\",\n    get: function get() {\n      return getSupport();\n    }\n  }, {\n    key: \"Class\",\n    get: function get() {\n      return Framework7Class;\n    }\n  }, {\n    key: \"Events\",\n    get: function get() {\n      return EventsClass;\n    }\n  }]);\n  return Framework7;\n}(Framework7Class);\nFramework7.ModalMethods = ModalMethods;\nFramework7.ConstructorMethods = ConstructorMethods;\nFramework7.loadModule = loadModule;\nFramework7.loadModules = function loadModules(modules) {\n  return Promise.all(modules.map(function (module) {\n    return Framework7.loadModule(module);\n  }));\n};\nexport default Framework7;","map":null,"metadata":{},"sourceType":"module"}