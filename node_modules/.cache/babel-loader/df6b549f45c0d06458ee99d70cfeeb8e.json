{"ast":null,"code":"import React,{Component}from'react';import{CSSTransition}from'react-transition-group';import{isArray}from'lodash';import rpc from'utils/rpc';import{sections,groups}from'./data';import Cell from'./cell';import Passengers from'./passengers';import Organization from'./organization';import Animations from'./anims';export default class Target extends Component{constructor(){super(...arguments);this.list=React.createRef();this.animInterval=void 0;this.state={};}componentDidMount(){rpc.register('Target-ShowMenu',this.setType.bind(this));rpc.register('Target-Reset',this.reset.bind(this));this.animateItems();}componentDidUpdate(prevProps,prevState){const{type,group}=this.state;if(type!==prevState.type||group!==prevState.group){this.animateItems();}}componentWillUnmount(){if(this.state.type)rpc.callClient('Target-CloseMenu');rpc.unregister('Target-ShowMenu');rpc.unregister('Target-Reset');}setType(type){this.setState(()=>({type}));}reset(){this.setState(()=>({type:undefined,group:undefined}));}toPrev(){if(!this.state.group)rpc.callClient('Target-CloseMenu');else this.setState(()=>({group:undefined}));}animateItems(){this.animInterval=setInterval(()=>{if(!this.list.current)return;const cell=Array.from(this.list.current.children).find(item=>item.classList.contains('disabled'));if(cell)cell.classList.remove('disabled');else if(this.animInterval)clearInterval(this.animInterval);},100);}async onCellClick(id){const{type,group}=this.state;if(groups[id])this.setState(()=>({group:id}));else await rpc.callClient('Target-SelectItem',[type,{group,id}]);}getItems(){const{type,group}=this.state;switch(group){case'passengers':return/*#__PURE__*/React.createElement(Passengers,{onClick:this.onCellClick.bind(this)});case'animations':return/*#__PURE__*/React.createElement(Animations,{showCells:this.animateItems.bind(this)});case'organization':return/*#__PURE__*/React.createElement(Organization,null);default:return Object.entries(group?groups[group]:sections[type]).map(_ref=>{let[name,data]=_ref;return/*#__PURE__*/React.createElement(Cell,{key:name,label:isArray(data)?data[1]:name,title:isArray(data)?data[0]:data,onClick:this.onCellClick.bind(this,name)});});}}render(){const{type,group}=this.state;return/*#__PURE__*/React.createElement(CSSTransition,{in:!!type,timeout:200,classNames:\"fadeIn\",unmountOnExit:true},type?/*#__PURE__*/React.createElement(\"div\",{className:\"target-menu\"},/*#__PURE__*/React.createElement(\"ul\",{ref:this.list,className:\"target-menu_cells\"},/*#__PURE__*/React.createElement(Cell,{label:\"close\",title:group?'Назад':'Закрыть',onClick:this.toPrev.bind(this)}),this.getItems())):/*#__PURE__*/React.createElement(\"div\",null));}}","map":null,"metadata":{},"sourceType":"module"}