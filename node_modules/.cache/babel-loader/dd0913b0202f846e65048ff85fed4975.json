{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef, useRef, useImperativeHandle } from 'react';\nimport { useIsomorphicLayoutEffect } from '../shared/use-isomorphic-layout-effect';\nimport { classNames, getExtraAttrs, emit, getSlots, noUndefinedProps } from '../shared/utils';\nimport { colorClasses } from '../shared/mixins';\nimport Link from './link';\nimport Input from './input';\nimport { f7ready, f7 } from '../shared/f7';\nimport { watchProp } from '../shared/watch-prop';\nvar Messagebar = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _f7Messagebar = useRef(null);\n  var updateSheetVisible = useRef(false);\n  var updateAttachmentsVisible = useRef(false);\n  var className = props.className,\n    id = props.id,\n    style = props.style,\n    sheetVisible = props.sheetVisible,\n    attachmentsVisible = props.attachmentsVisible,\n    top = props.top,\n    _props$resizable = props.resizable,\n    resizable = _props$resizable === void 0 ? true : _props$resizable,\n    _props$bottomOffset = props.bottomOffset,\n    bottomOffset = _props$bottomOffset === void 0 ? 0 : _props$bottomOffset,\n    _props$topOffset = props.topOffset,\n    topOffset = _props$topOffset === void 0 ? 0 : _props$topOffset,\n    maxHeight = props.maxHeight,\n    _props$resizePage = props.resizePage,\n    resizePage = _props$resizePage === void 0 ? true : _props$resizePage,\n    sendLink = props.sendLink,\n    value = props.value,\n    disabled = props.disabled,\n    readonly = props.readonly,\n    textareaId = props.textareaId,\n    name = props.name,\n    _props$placeholder = props.placeholder,\n    placeholder = _props$placeholder === void 0 ? 'Message' : _props$placeholder,\n    _props$init = props.init,\n    init = _props$init === void 0 ? true : _props$init;\n  var extraAttrs = getExtraAttrs(props);\n  var elRef = useRef(null);\n  var areaElRef = useRef(null);\n  var onChange = function onChange(event) {\n    emit(props, 'change', event);\n  };\n  var onInput = function onInput(event) {\n    emit(props, 'input', event);\n  };\n  var onFocus = function onFocus(event) {\n    emit(props, 'focus', event);\n  };\n  var onBlur = function onBlur(event) {\n    emit(props, 'blur', event);\n  };\n  var onClick = function onClick(event) {\n    var inputValue = areaElRef.current.el.value;\n    var clear = _f7Messagebar.current ? function () {\n      _f7Messagebar.current.clear();\n    } : function () {};\n    emit(props, 'submit', inputValue, clear);\n    emit(props, 'send', inputValue, clear);\n    emit(props, 'click', event);\n  };\n  var onAttachmentDelete = function onAttachmentDelete(instance, attachmentEl, attachmentElIndex) {\n    emit(props, 'messagebarAttachmentDelete', instance, attachmentEl, attachmentElIndex);\n  };\n  var onAttachmentClick = function onAttachmentClick(instance, attachmentEl, attachmentElIndex) {\n    emit(props, 'messagebarAttachmentClick', instance, attachmentEl, attachmentElIndex);\n  };\n  var onResizePage = function onResizePage(instance) {\n    emit(props, 'messagebarResizePage', instance);\n  };\n  useImperativeHandle(ref, function () {\n    return {\n      el: elRef.current,\n      f7Messagebar: function f7Messagebar() {\n        return _f7Messagebar.current;\n      }\n    };\n  });\n  watchProp(sheetVisible, function () {\n    if (!resizable || !_f7Messagebar.current) return;\n    updateSheetVisible.current = true;\n  });\n  watchProp(attachmentsVisible, function () {\n    if (!resizable || !_f7Messagebar.current) return;\n    updateAttachmentsVisible.current = true;\n  });\n  useIsomorphicLayoutEffect(function () {\n    if (!_f7Messagebar.current) return;\n    if (updateSheetVisible.current) {\n      updateSheetVisible.current = false;\n      _f7Messagebar.current.sheetVisible = sheetVisible;\n      _f7Messagebar.current.resizePage();\n    }\n    if (updateAttachmentsVisible.current) {\n      updateAttachmentsVisible.current = false;\n      _f7Messagebar.current.attachmentsVisible = attachmentsVisible;\n      _f7Messagebar.current.resizePage();\n    }\n  });\n  var onMount = function onMount() {\n    if (!init) return;\n    if (!elRef.current) return;\n    var params = noUndefinedProps({\n      el: elRef.current,\n      top: top,\n      resizePage: resizePage,\n      bottomOffset: bottomOffset,\n      topOffset: topOffset,\n      maxHeight: maxHeight,\n      on: {\n        attachmentDelete: onAttachmentDelete,\n        attachmentClick: onAttachmentClick,\n        resizePage: onResizePage\n      }\n    });\n    f7ready(function () {\n      _f7Messagebar.current = f7.messagebar.create(params);\n    });\n  };\n  var onDestroy = function onDestroy() {\n    if (_f7Messagebar.current && _f7Messagebar.current.destroy) _f7Messagebar.current.destroy();\n    _f7Messagebar.current = null;\n  };\n  useIsomorphicLayoutEffect(function () {\n    onMount();\n    return onDestroy;\n  }, []);\n  var slots = getSlots(props);\n  var slotsDefault = slots.default,\n    slotsBeforeInner = slots['before-inner'],\n    slotsAfterInner = slots['after-inner'],\n    slotsSendLink = slots['send-link'],\n    slotsInnerStart = slots['inner-start'],\n    slotsInnerEnd = slots['inner-end'],\n    slotsBeforeArea = slots['before-area'],\n    slotsAfterArea = slots['after-area'];\n  var innerEndEls = [];\n  var messagebarAttachmentsEl;\n  var messagebarSheetEl;\n  if (slotsDefault) {\n    slotsDefault.forEach(function (child) {\n      if (typeof child === 'undefined') return;\n      var tag = child.type && (child.type.displayName || child.type.name);\n      if (tag && (tag.indexOf('messagebar-attachments') >= 0 || tag === 'F7MessagebarAttachments' || tag === 'f7-messagebar-attachments')) {\n        messagebarAttachmentsEl = child;\n      } else if (tag && (tag.indexOf('messagebar-sheet') >= 0 || tag === 'F7MessagebarSheet' || tag === 'f7-messagebar-sheet')) {\n        messagebarSheetEl = child;\n      } else {\n        innerEndEls.push(child);\n      }\n    });\n  }\n  var valueProps = {};\n  if ('value' in props) valueProps.value = value;\n  var classes = classNames(className, 'toolbar', 'messagebar', {\n    'messagebar-attachments-visible': attachmentsVisible,\n    'messagebar-sheet-visible': sheetVisible\n  }, colorClasses(props));\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    id: id,\n    style: style,\n    className: classes,\n    ref: elRef\n  }, extraAttrs), slotsBeforeInner, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toolbar-inner\"\n  }, slotsInnerStart, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messagebar-area\"\n  }, slotsBeforeArea, messagebarAttachmentsEl, /*#__PURE__*/React.createElement(Input, _extends({\n    id: textareaId,\n    ref: areaElRef,\n    type: \"textarea\",\n    wrap: false,\n    placeholder: placeholder,\n    disabled: disabled,\n    name: name,\n    readonly: readonly,\n    resizable: resizable,\n    onInput: onInput,\n    onChange: onChange,\n    onFocus: onFocus,\n    onBlur: onBlur\n  }, valueProps)), slotsAfterArea), (sendLink && sendLink.length > 0 || slotsSendLink) && /*#__PURE__*/React.createElement(Link, {\n    onClick: onClick\n  }, slotsSendLink || sendLink), slotsInnerEnd, innerEndEls), slotsAfterInner, messagebarSheetEl);\n});\nMessagebar.displayName = 'f7-messagebar';\nexport default Messagebar;","map":null,"metadata":{},"sourceType":"module"}