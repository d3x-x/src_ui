{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef, useRef, useImperativeHandle } from 'react';\nimport { classNames, getExtraAttrs, emit } from '../shared/utils';\nimport { colorClasses } from '../shared/mixins';\nimport { useTheme } from '../shared/use-theme';\nimport Link from './link';\nvar NavLeft = /*#__PURE__*/forwardRef(function (props, ref) {\n  var className = props.className,\n    id = props.id,\n    style = props.style,\n    children = props.children,\n    backLink = props.backLink,\n    backLinkUrl = props.backLinkUrl,\n    backLinkForce = props.backLinkForce,\n    backLinkShowText = props.backLinkShowText,\n    sliding = props.sliding;\n  var extraAttrs = getExtraAttrs(props);\n  var elRef = useRef(null);\n  var onBackClick = function onBackClick(event) {\n    emit(props, 'backClick clickBack', event);\n  };\n  useImperativeHandle(ref, function () {\n    return {\n      el: elRef.current\n    };\n  });\n  var theme = useTheme();\n  var linkEl;\n  var needBackLinkText = backLinkShowText;\n  if (typeof needBackLinkText === 'undefined') needBackLinkText = !theme.md;\n  if (backLink) {\n    var text = backLink !== true && needBackLinkText ? backLink : undefined;\n    linkEl = /*#__PURE__*/React.createElement(Link, {\n      href: backLinkUrl || '#',\n      back: true,\n      icon: \"icon-back\",\n      force: backLinkForce || undefined,\n      className: !text ? 'icon-only' : undefined,\n      text: text,\n      onClick: onBackClick\n    });\n  }\n  var classes = classNames(className, 'left', {\n    sliding: sliding\n  }, colorClasses(props));\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    id: id,\n    style: style,\n    className: classes,\n    ref: elRef\n  }, extraAttrs), linkEl, children);\n});\nNavLeft.displayName = 'f7-nav-left';\nexport default NavLeft;","map":null,"metadata":{},"sourceType":"module"}