{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport { watchProp } from './watch-prop';\nimport { f7, f7ready } from './f7';\nexport var useTooltip = function useTooltip(elRef, props) {\n  var f7Tooltip = useRef(null);\n  var tooltip = props.tooltip,\n    tooltipTrigger = props.tooltipTrigger;\n  var onMount = function onMount() {\n    if (!elRef.current) return;\n    if (!tooltip) return;\n    f7ready(function () {\n      f7Tooltip.current = f7.tooltip.create({\n        targetEl: elRef.current,\n        text: tooltip,\n        trigger: tooltipTrigger\n      });\n    });\n  };\n  var onDestroy = function onDestroy() {\n    if (f7Tooltip.current && f7Tooltip.current.destroy) {\n      f7Tooltip.current.destroy();\n      f7Tooltip.current = null;\n    }\n  };\n  useEffect(function () {\n    onMount();\n    return onDestroy;\n  }, []);\n  watchProp(tooltip, function (value) {\n    if (!value && f7Tooltip.current) {\n      f7Tooltip.current.destroy();\n      f7Tooltip.current = null;\n      return;\n    }\n    if (value && !f7Tooltip.current && f7) {\n      f7Tooltip.current = f7.tooltip.create({\n        targetEl: elRef.current,\n        text: value,\n        trigger: tooltipTrigger\n      });\n      return;\n    }\n    if (!value || !f7Tooltip.current) return;\n    f7Tooltip.current.setText(value);\n  });\n};","map":null,"metadata":{},"sourceType":"module"}