{"ast":null,"code":"import React,{Component}from'react';import rpc from'utils/rpc';import Options from'../options';import Selector from'../selector';import Hair from'./hair';import Face from'./face';import Makeup from'./makeup';import Item from'./item';const options={lenses:'Лiнзи',brows:'Бровi',hair:'Зачiска',face:'Обличчя'};const maleOptions={...options,beard:'Борода'};const femaleOptions={...options,makeup:'Макiяж'};export default class Appearance extends Component{constructor(){super(...arguments);this.state={activeOption:'hair',gender:'male',hair:{style:0,color:0,highlight:0},headOverlay:[[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0]],eyeColor:0};}componentDidMount(){rpc.callClient('CharCreator-GetState').then(_ref=>{let{gender,hair,headOverlay,eyeColor}=_ref;return this.setState(()=>({gender,hair,headOverlay,eyeColor}));});}selectOption(name){this.setState(()=>({activeOption:name}));}getOptionComponent(){const{activeOption,hair,eyeColor,headOverlay}=this.state;switch(activeOption){case'hair':return/*#__PURE__*/React.createElement(Hair,{style:hair.style,color:hair.color,highlight:hair.highlight,update:this.setHair.bind(this)});case'face':return/*#__PURE__*/React.createElement(Face,{values:headOverlay,update:this.changeHeadOverlay.bind(this)});case'beard':return/*#__PURE__*/React.createElement(Item,{style:headOverlay[1][0],color:headOverlay[1][1],styles:28,update:this.changeHeadOverlay.bind(this,1)});case'brows':return/*#__PURE__*/React.createElement(Item,{style:headOverlay[2][0],color:headOverlay[2][1],styles:33,update:this.changeHeadOverlay.bind(this,2)});case'makeup':return/*#__PURE__*/React.createElement(Makeup,{values:headOverlay,update:this.changeHeadOverlay.bind(this)});default:return/*#__PURE__*/React.createElement(Selector,{title:\"\\u0426\\u0432\\u0435\\u0442\",items:[...Array(31).keys()],value:eyeColor,onChange:this.setEyeColor.bind(this)});}}async changeHeadOverlay(id,value){let color=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;await this.setState(state=>({headOverlay:state.headOverlay.map((item,index)=>id===index?[value,color]:item)}));await rpc.callClient('Character-UpdateHeadOverlay',[id,value,color]);}async setEyeColor(color){await this.setState(()=>({eyeColor:color}));await rpc.callClient('Character-SetEyeColor',color);}async setHair(prop,value){await this.setState(state=>({hair:{...state.hair,[prop]:value}}));const{style,color,highlight}=this.state.hair;await rpc.callClient('Character-UpdateHair',[style,color,highlight]);}render(){const{activeOption,gender}=this.state;return/*#__PURE__*/React.createElement(\"div\",{className:\"character_item character_item--appearance\"},this.getOptionComponent(),/*#__PURE__*/React.createElement(Options,{items:gender==='male'?maleOptions:femaleOptions,selected:activeOption,select:this.selectOption.bind(this)}));}}","map":null,"metadata":{},"sourceType":"module"}