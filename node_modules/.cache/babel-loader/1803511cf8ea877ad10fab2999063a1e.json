{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef, useRef, useImperativeHandle } from 'react';\nimport { useIsomorphicLayoutEffect } from '../shared/use-isomorphic-layout-effect';\nimport { classNames, getExtraAttrs, emit } from '../shared/utils';\nimport { colorClasses } from '../shared/mixins';\nimport Preloader from './preloader';\nimport { useTab } from '../shared/use-tab';\nimport { f7ready, f7 } from '../shared/f7';\nvar PageContent = /*#__PURE__*/forwardRef(function (props, ref) {\n  var className = props.className,\n    id = props.id,\n    style = props.style,\n    children = props.children,\n    tab = props.tab,\n    tabActive = props.tabActive,\n    ptr = props.ptr,\n    ptrDistance = props.ptrDistance,\n    _props$ptrPreloader = props.ptrPreloader,\n    ptrPreloader = _props$ptrPreloader === void 0 ? true : _props$ptrPreloader,\n    ptrBottom = props.ptrBottom,\n    ptrMousewheel = props.ptrMousewheel,\n    infinite = props.infinite,\n    infiniteTop = props.infiniteTop,\n    infiniteDistance = props.infiniteDistance,\n    _props$infinitePreloa = props.infinitePreloader,\n    infinitePreloader = _props$infinitePreloa === void 0 ? true : _props$infinitePreloa,\n    hideBarsOnScroll = props.hideBarsOnScroll,\n    hideNavbarOnScroll = props.hideNavbarOnScroll,\n    hideToolbarOnScroll = props.hideToolbarOnScroll,\n    messagesContent = props.messagesContent,\n    loginScreen = props.loginScreen;\n  var extraAttrs = getExtraAttrs(props);\n  var elRef = useRef(null);\n  var onPtrPullStart = function onPtrPullStart(el) {\n    if (elRef.current !== el) return;\n    emit(props, 'ptrPullStart');\n  };\n  var onPtrPullMove = function onPtrPullMove(el) {\n    if (elRef.current !== el) return;\n    emit(props, 'ptrPullMove');\n  };\n  var onPtrPullEnd = function onPtrPullEnd(el) {\n    if (elRef.current !== el) return;\n    emit(props, 'ptrPullEnd');\n  };\n  var onPtrRefresh = function onPtrRefresh(el, done) {\n    if (elRef.current !== el) return;\n    emit(props, 'ptrRefresh', done);\n  };\n  var onPtrDone = function onPtrDone(el) {\n    if (elRef.current !== el) return;\n    emit(props, 'ptrDone');\n  };\n  var onInfinite = function onInfinite(el) {\n    if (elRef.current !== el) return;\n    emit(props, 'infinite');\n  };\n  useImperativeHandle(ref, function () {\n    return {\n      el: elRef.current\n    };\n  });\n  useTab(elRef, props);\n  var attachEvents = function attachEvents() {\n    f7ready(function () {\n      if (ptr) {\n        f7.on('ptrPullStart', onPtrPullStart);\n        f7.on('ptrPullMove', onPtrPullMove);\n        f7.on('ptrPullEnd', onPtrPullEnd);\n        f7.on('ptrRefresh', onPtrRefresh);\n        f7.on('ptrDone', onPtrDone);\n      }\n      if (infinite) {\n        f7.on('infinite', onInfinite);\n      }\n    });\n  };\n  var detachEvents = function detachEvents() {\n    if (!f7) return;\n    f7.off('ptrPullStart', onPtrPullStart);\n    f7.off('ptrPullMove', onPtrPullMove);\n    f7.off('ptrPullEnd', onPtrPullEnd);\n    f7.off('ptrRefresh', onPtrRefresh);\n    f7.off('ptrDone', onPtrDone);\n    f7.off('infinite', onInfinite);\n  };\n  useIsomorphicLayoutEffect(function () {\n    attachEvents();\n    return detachEvents;\n  });\n  var ptrEl;\n  var infiniteEl;\n  if (ptr && ptrPreloader) {\n    ptrEl = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ptr-preloader\"\n    }, /*#__PURE__*/React.createElement(Preloader, null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ptr-arrow\"\n    }));\n  }\n  if (infinite && infinitePreloader) {\n    infiniteEl = /*#__PURE__*/React.createElement(Preloader, {\n      className: \"infinite-scroll-preloader\"\n    });\n  }\n  var classes = classNames(className, 'page-content', {\n    tab: tab,\n    'tab-active': tabActive,\n    'ptr-content': ptr,\n    'ptr-bottom': ptrBottom,\n    'infinite-scroll-content': infinite,\n    'infinite-scroll-top': infiniteTop,\n    'hide-bars-on-scroll': hideBarsOnScroll,\n    'hide-navbar-on-scroll': hideNavbarOnScroll,\n    'hide-toolbar-on-scroll': hideToolbarOnScroll,\n    'messages-content': messagesContent,\n    'login-screen-content': loginScreen\n  }, colorClasses(props));\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    id: id,\n    style: style,\n    className: classes,\n    \"data-ptr-distance\": ptrDistance || undefined,\n    \"data-ptr-mousewheel\": ptrMousewheel || undefined,\n    \"data-infinite-distance\": infiniteDistance || undefined,\n    ref: elRef\n  }, extraAttrs), ptrBottom ? null : ptrEl, infiniteTop ? infiniteEl : null, children, infiniteTop ? null : infiniteEl, ptrBottom ? ptrEl : null);\n});\nPageContent.displayName = 'f7-page-content';\nexport default PageContent;","map":null,"metadata":{},"sourceType":"module"}