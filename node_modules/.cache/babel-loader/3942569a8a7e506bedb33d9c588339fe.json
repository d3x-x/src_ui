{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef, useRef, useImperativeHandle } from 'react';\nimport { classNames, getExtraAttrs } from '../shared/utils';\nimport { colorClasses } from '../shared/mixins';\nimport { f7 } from '../shared/f7';\nvar Progressbar = /*#__PURE__*/forwardRef(function (props, ref) {\n  var className = props.className,\n    id = props.id,\n    style = props.style,\n    progress = props.progress,\n    infinite = props.infinite;\n  var extraAttrs = getExtraAttrs(props);\n  var elRef = useRef(null);\n  var set = function set(newProgress, speed) {\n    if (!f7) return;\n    f7.progressbar.set(elRef.current, newProgress, speed);\n  };\n  useImperativeHandle(ref, function () {\n    return {\n      el: elRef.current,\n      set: set\n    };\n  });\n  var transformStyle = {\n    transform: progress ? \"translate3d(\" + (-100 + progress) + \"%, 0, 0)\" : '',\n    WebkitTransform: progress ? \"translate3d(\" + (-100 + progress) + \"%, 0, 0)\" : ''\n  };\n  var classes = classNames(className, 'progressbar', {\n    'progressbar-infinite': infinite\n  }, colorClasses(props));\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    ref: elRef,\n    id: id,\n    style: style,\n    className: classes,\n    \"data-progress\": progress\n  }, extraAttrs), /*#__PURE__*/React.createElement(\"span\", {\n    style: transformStyle\n  }));\n});\nProgressbar.displayName = 'f7-progressbar';\nexport default Progressbar;","map":null,"metadata":{},"sourceType":"module"}