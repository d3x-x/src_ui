{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef, useRef, useImperativeHandle } from 'react';\nimport { useIsomorphicLayoutEffect } from '../shared/use-isomorphic-layout-effect';\nimport { classNames, getExtraAttrs, emit } from '../shared/utils';\nimport { colorClasses } from '../shared/mixins';\nimport { f7, f7ready } from '../shared/f7';\nvar AccordionItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var className = props.className,\n    id = props.id,\n    style = props.style,\n    children = props.children,\n    opened = props.opened;\n  var elRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return {\n      el: elRef.current\n    };\n  });\n  var onBeforeOpen = function onBeforeOpen(el, prevent) {\n    if (elRef.current !== el) return;\n    emit(props, 'accordionBeforeOpen', prevent);\n  };\n  var onOpen = function onOpen(el) {\n    if (elRef.current !== el) return;\n    emit(props, 'accordionOpen');\n  };\n  var onOpened = function onOpened(el) {\n    if (elRef.current !== el) return;\n    emit(props, 'accordionOpened');\n  };\n  var onBeforeClose = function onBeforeClose(el, prevent) {\n    if (elRef.current !== el) return;\n    emit(props, 'accordionBeforeClose', prevent);\n  };\n  var onClose = function onClose(el) {\n    if (elRef.current !== el) return;\n    emit(props, 'accordionClose');\n  };\n  var onClosed = function onClosed(el) {\n    if (elRef.current !== el) return;\n    emit(props, 'accordionClosed');\n  };\n  var attachEvents = function attachEvents() {\n    f7ready(function () {\n      f7.on('accordionBeforeOpen', onBeforeOpen);\n      f7.on('accordionOpen', onOpen);\n      f7.on('accordionOpened', onOpened);\n      f7.on('accordionBeforeClose', onBeforeClose);\n      f7.on('accordionClose', onClose);\n      f7.on('accordionClosed', onClosed);\n    });\n  };\n  var detachEvents = function detachEvents() {\n    f7.off('accordionBeforeOpen', onBeforeOpen);\n    f7.off('accordionOpen', onOpen);\n    f7.off('accordionOpened', onOpened);\n    f7.off('accordionBeforeClose', onBeforeClose);\n    f7.off('accordionClose', onClose);\n    f7.off('accordionClosed', onClosed);\n  };\n  useIsomorphicLayoutEffect(function () {\n    attachEvents();\n    return detachEvents;\n  });\n  var extraAttrs = getExtraAttrs(props);\n  var classes = classNames(className, 'accordion-item', {\n    'accordion-item-opened': opened\n  }, colorClasses(props));\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    id: id,\n    style: style,\n    className: classes,\n    ref: elRef\n  }, extraAttrs), children);\n});\nAccordionItem.displayName = 'f7-accordion-item';\nexport default AccordionItem;","map":null,"metadata":{},"sourceType":"module"}