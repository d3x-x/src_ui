{"ast":null,"code":"function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nimport { extend, now } from './utils';\nimport EventsClass from './events-class';\nvar Framework7Class = /*#__PURE__*/function (_EventsClass) {\n  _inheritsLoose(Framework7Class, _EventsClass);\n  function Framework7Class(params, parents) {\n    var _this;\n    if (params === void 0) {\n      params = {};\n    }\n    if (parents === void 0) {\n      parents = [];\n    }\n    _this = _EventsClass.call(this, parents) || this;\n    var self = _assertThisInitialized(_this);\n    self.params = params;\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach(function (eventName) {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n    return _this;\n  } // eslint-disable-next-line\n\n  var _proto = Framework7Class.prototype;\n  _proto.useModuleParams = function useModuleParams(module, instanceParams) {\n    if (module.params) {\n      var originalParams = {};\n      Object.keys(module.params).forEach(function (paramKey) {\n        if (typeof instanceParams[paramKey] === 'undefined') return;\n        originalParams[paramKey] = extend({}, instanceParams[paramKey]);\n      });\n      extend(instanceParams, module.params);\n      Object.keys(originalParams).forEach(function (paramKey) {\n        extend(instanceParams[paramKey], originalParams[paramKey]);\n      });\n    }\n  };\n  _proto.useModulesParams = function useModulesParams(instanceParams) {\n    var instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName]; // Extend params\n\n      if (module.params) {\n        extend(instanceParams, module.params);\n      }\n    });\n  };\n  _proto.useModule = function useModule(moduleName, moduleParams) {\n    if (moduleName === void 0) {\n      moduleName = '';\n    }\n    if (moduleParams === void 0) {\n      moduleParams = {};\n    }\n    var instance = this;\n    if (!instance.modules) return;\n    var module = typeof moduleName === 'string' ? instance.modules[moduleName] : moduleName;\n    if (!module) return; // Extend instance methods and props\n\n    if (module.instance) {\n      Object.keys(module.instance).forEach(function (modulePropName) {\n        var moduleProp = module.instance[modulePropName];\n        if (typeof moduleProp === 'function') {\n          instance[modulePropName] = moduleProp.bind(instance);\n        } else {\n          instance[modulePropName] = moduleProp;\n        }\n      });\n    } // Add event listeners\n\n    if (module.on && instance.on) {\n      Object.keys(module.on).forEach(function (moduleEventName) {\n        instance.on(moduleEventName, module.on[moduleEventName]);\n      });\n    } // Add vnode hooks\n\n    if (module.vnode) {\n      if (!instance.vnodeHooks) instance.vnodeHooks = {};\n      Object.keys(module.vnode).forEach(function (vnodeId) {\n        Object.keys(module.vnode[vnodeId]).forEach(function (hookName) {\n          var handler = module.vnode[vnodeId][hookName];\n          if (!instance.vnodeHooks[hookName]) instance.vnodeHooks[hookName] = {};\n          if (!instance.vnodeHooks[hookName][vnodeId]) instance.vnodeHooks[hookName][vnodeId] = [];\n          instance.vnodeHooks[hookName][vnodeId].push(handler.bind(instance));\n        });\n      });\n    } // Module create callback\n\n    if (module.create) {\n      module.create.bind(instance)(moduleParams);\n    }\n  };\n  _proto.useModules = function useModules(modulesParams) {\n    if (modulesParams === void 0) {\n      modulesParams = {};\n    }\n    var instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var moduleParams = modulesParams[moduleName] || {};\n      instance.useModule(moduleName, moduleParams);\n    });\n  };\n  Framework7Class.installModule = function installModule(module) {\n    var Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    var name = module.name || Object.keys(Class.prototype.modules).length + \"_\" + now();\n    Class.prototype.modules[name] = module; // Prototype\n\n    if (module.proto) {\n      Object.keys(module.proto).forEach(function (key) {\n        Class.prototype[key] = module.proto[key];\n      });\n    } // Class\n\n    if (module.static) {\n      Object.keys(module.static).forEach(function (key) {\n        Class[key] = module.static[key];\n      });\n    } // Callback\n\n    if (module.install) {\n      for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        params[_key - 1] = arguments[_key];\n      }\n      module.install.apply(Class, params);\n    }\n    return Class;\n  };\n  Framework7Class.use = function use(module) {\n    var Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(function (m) {\n        return Class.installModule(m);\n      });\n      return Class;\n    }\n    for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      params[_key2 - 1] = arguments[_key2];\n    }\n    return Class.installModule.apply(Class, [module].concat(params));\n  };\n  _createClass(Framework7Class, null, [{\n    key: \"components\",\n    set: function set(components) {\n      var Class = this;\n      if (!Class.use) return;\n      Class.use(components);\n    }\n  }]);\n  return Framework7Class;\n}(EventsClass);\nexport default Framework7Class;","map":null,"metadata":{},"sourceType":"module"}