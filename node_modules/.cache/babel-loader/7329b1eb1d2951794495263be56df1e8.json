{"ast":null,"code":"import React, { useRef, useEffect } from 'react';\nimport { classNames } from '../shared/utils';\nimport { colorClasses } from '../shared/mixins';\nimport Badge from './badge';\nvar ListItemContent = function ListItemContent(props) {\n  var indeterminate = props.indeterminate,\n    radio = props.radio,\n    checkbox = props.checkbox,\n    value = props.value,\n    name = props.name,\n    readonly = props.readonly,\n    disabled = props.disabled,\n    checked = props.checked,\n    defaultChecked = props.defaultChecked,\n    required = props.required,\n    media = props.media,\n    header = props.header,\n    footer = props.footer,\n    title = props.title,\n    subtitle = props.subtitle,\n    text = props.text,\n    after = props.after,\n    badge = props.badge,\n    badgeColor = props.badgeColor,\n    radioIcon = props.radioIcon,\n    swipeout = props.swipeout,\n    sortable = props.sortable,\n    accordionItem = props.accordionItem,\n    onChange = props.onChange,\n    onClick = props.onClick,\n    isMediaComputed = props.isMediaComputed,\n    isSortableComputed = props.isSortableComputed,\n    isSortableOppositeComputed = props.isSortableOppositeComputed,\n    slots = props.slots;\n  var inputElRef = useRef(null);\n  useEffect(function () {\n    if (inputElRef.current) {\n      inputElRef.current.indeterminate = !!indeterminate;\n    }\n  }, [indeterminate]);\n  var titleEl;\n  var afterWrapEl;\n  var afterEl;\n  var badgeEl;\n  var innerEl;\n  var titleRowEl;\n  var subtitleEl;\n  var textEl;\n  var mediaEl;\n  var inputEl;\n  var inputIconEl;\n  var headerEl;\n  var footerEl; // Input\n\n  if (radio || checkbox) {\n    inputEl = /*#__PURE__*/React.createElement(\"input\", {\n      ref: inputElRef,\n      value: value,\n      name: name,\n      checked: checked,\n      defaultChecked: defaultChecked,\n      readOnly: readonly,\n      disabled: disabled,\n      required: required,\n      type: radio ? 'radio' : 'checkbox',\n      onChange: onChange\n    });\n    inputIconEl = /*#__PURE__*/React.createElement(\"i\", {\n      className: \"icon icon-\" + (radio ? 'radio' : 'checkbox')\n    });\n  } // Media\n\n  if (media || slots.media) {\n    var mediaImgEl;\n    if (media) {\n      mediaImgEl = /*#__PURE__*/React.createElement(\"img\", {\n        src: media\n      });\n    }\n    mediaEl = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item-media\"\n    }, mediaImgEl, slots.media);\n  } // Inner Elements\n\n  if (header || slots.header) {\n    headerEl = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item-header\"\n    }, header, slots.header);\n  }\n  if (footer || slots.footer) {\n    footerEl = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item-footer\"\n    }, footer, slots.footer);\n  }\n  if (title || slots.title || !isMediaComputed && headerEl || !isMediaComputed && footerEl) {\n    titleEl = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item-title\"\n    }, !isMediaComputed && headerEl, title, slots.title, !isMediaComputed && footerEl);\n  }\n  if (subtitle || slots.subtitle) {\n    subtitleEl = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item-subtitle\"\n    }, subtitle, slots.subtitle);\n  }\n  if (text || slots.text) {\n    textEl = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item-text\"\n    }, text, slots.text);\n  }\n  if (after || badge || slots.after) {\n    if (after) {\n      afterEl = /*#__PURE__*/React.createElement(\"span\", null, after);\n    }\n    if (badge) {\n      badgeEl = /*#__PURE__*/React.createElement(Badge, {\n        color: badgeColor\n      }, badge);\n    }\n    afterWrapEl = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item-after\"\n    }, slots['after-start'], afterEl, badgeEl, slots.after, slots['after-end']);\n  }\n  if (isMediaComputed) {\n    titleRowEl = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item-title-row\"\n    }, slots['before-title'], titleEl, slots['after-title'], afterWrapEl);\n    innerEl = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item-inner\"\n    }, slots['inner-start'], headerEl, titleRowEl, subtitleEl, textEl, swipeout || accordionItem ? null : slots.default, slots.inner, footerEl, slots['inner-end']);\n  } else {\n    innerEl = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item-inner\"\n    }, slots['inner-start'], slots['before-title'], titleEl, slots['after-title'], afterWrapEl, swipeout || accordionItem ? null : slots.default, slots.inner, slots['inner-end']);\n  }\n  var ItemContentTag = checkbox || radio ? 'label' : 'div';\n  var classes = classNames('item-content', {\n    'item-checkbox': checkbox,\n    'item-radio': radio,\n    'item-radio-icon-start': radio && radioIcon === 'start',\n    'item-radio-icon-end': radio && radioIcon === 'end'\n  }, colorClasses(props));\n  return /*#__PURE__*/React.createElement(ItemContentTag, {\n    className: classes,\n    onClick: onClick\n  }, isSortableComputed && sortable !== false && isSortableOppositeComputed && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sortable-handler\"\n  }), slots['content-start'], inputEl, inputIconEl, mediaEl, innerEl, slots.content, slots['content-end']);\n};\nListItemContent.displayName = 'f7-list-item-content';\nexport default ListItemContent;","map":null,"metadata":{},"sourceType":"module"}