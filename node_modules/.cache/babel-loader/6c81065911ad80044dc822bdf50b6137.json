{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef, useRef, useImperativeHandle } from 'react';\nimport { useIsomorphicLayoutEffect } from '../shared/use-isomorphic-layout-effect';\nimport { classNames, getExtraAttrs, getSlots, emit } from '../shared/utils';\nimport { colorClasses } from '../shared/mixins';\nimport { useTheme } from '../shared/use-theme';\nimport { f7ready, f7 } from '../shared/f7';\nimport { TabbarContext } from '../shared/tabbar-context';\nvar Toolbar = /*#__PURE__*/forwardRef(function (props, ref) {\n  var className = props.className,\n    id = props.id,\n    style = props.style,\n    tabbar = props.tabbar,\n    labels = props.labels,\n    scrollable = props.scrollable,\n    hidden = props.hidden,\n    noShadow = props.noShadow,\n    noHairline = props.noHairline,\n    noBorder = props.noBorder,\n    position = props.position,\n    topMd = props.topMd,\n    topIos = props.topIos,\n    topAurora = props.topAurora,\n    top = props.top,\n    bottomMd = props.bottomMd,\n    bottomIos = props.bottomIos,\n    bottomAurora = props.bottomAurora,\n    bottom = props.bottom,\n    _props$inner = props.inner,\n    inner = _props$inner === void 0 ? true : _props$inner;\n  var extraAttrs = getExtraAttrs(props);\n  var elRef = useRef(null);\n  var onHide = function onHide(toolbarEl) {\n    if (elRef.current !== toolbarEl) return;\n    emit(props, 'toolbarHide');\n  };\n  var onShow = function onShow(toolbarEl) {\n    if (elRef.current !== toolbarEl) return;\n    emit(props, 'toolbarShow');\n  };\n  var hide = function hide(animate) {\n    if (!f7) return;\n    f7.toolbar.hide(elRef.current, animate);\n  };\n  var show = function show(animate) {\n    if (!f7) return;\n    f7.toolbar.show(elRef.current, animate);\n  };\n  useImperativeHandle(ref, function () {\n    return {\n      el: elRef.current,\n      hide: hide,\n      show: show\n    };\n  });\n  useIsomorphicLayoutEffect(function () {\n    f7ready(function () {\n      if (tabbar && f7 && elRef.current) {\n        f7.toolbar.setHighlight(elRef.current);\n      }\n      f7.on('toolbarShow', onShow);\n      f7.on('toolbarHide', onHide);\n    });\n    return function () {\n      if (!f7) return;\n      f7.off('toolbarShow', onShow);\n      f7.off('toolbarHide', onHide);\n    };\n  });\n  var theme = useTheme();\n  var classes = classNames(className, 'toolbar', {\n    tabbar: tabbar,\n    'toolbar-bottom': theme && theme.md && bottomMd || theme && theme.ios && bottomIos || theme && theme.aurora && bottomAurora || bottom || position === 'bottom',\n    'toolbar-top': theme && theme.md && topMd || theme && theme.ios && topIos || theme && theme.aurora && topAurora || top || position === 'top',\n    'tabbar-labels': labels,\n    'tabbar-scrollable': scrollable,\n    'toolbar-hidden': hidden,\n    'no-shadow': noShadow,\n    'no-hairline': noHairline || noBorder\n  }, colorClasses(props));\n  var slots = getSlots(props);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    id: id,\n    style: style,\n    className: classes,\n    ref: elRef\n  }, extraAttrs), /*#__PURE__*/React.createElement(TabbarContext.Provider, {\n    value: {\n      tabbarHasLabels: labels\n    }\n  }, slots['before-inner'], inner ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toolbar-inner\"\n  }, slots.default) : slots.default, slots['after-inner']));\n});\nToolbar.displayName = 'f7-toolbar';\nexport default Toolbar;","map":null,"metadata":{},"sourceType":"module"}