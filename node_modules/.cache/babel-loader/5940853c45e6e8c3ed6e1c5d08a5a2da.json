{"ast":null,"code":"function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nimport $ from '../../shared/dom7';\nimport { extend } from '../../shared/utils';\nimport Router from '../../modules/router/router';\nimport Framework7Class from '../../shared/class';\nimport resizableView from './resizable-view';\nvar View = /*#__PURE__*/function (_Framework7Class) {\n  _inheritsLoose(View, _Framework7Class);\n  function View(app, el, viewParams) {\n    var _this;\n    if (viewParams === void 0) {\n      viewParams = {};\n    }\n    _this = _Framework7Class.call(this, viewParams, [app]) || this;\n    var view = _assertThisInitialized(_this);\n    var ssr = view.params.routerId;\n    var defaults = {\n      routes: [],\n      routesAdd: []\n    };\n    if (!ssr) {\n      var $el = $(el);\n      if (!$el.length) {\n        var message = \"Framework7: can't create a View instance because \";\n        message += typeof el === 'string' ? \"the selector \\\"\" + el + \"\\\" didn't match any element\" : 'el must be an HTMLElement or Dom7 object';\n        throw new Error(message);\n      }\n    } // Default View params\n\n    view.params = extend({\n      el: el\n    }, defaults, app.params.view, viewParams); // Routes\n\n    if (view.params.routes.length > 0) {\n      view.routes = view.params.routes;\n    } else {\n      view.routes = [].concat(app.routes, view.params.routesAdd);\n    } // View Props\n\n    extend(false, view, {\n      app: app,\n      name: view.params.name,\n      main: view.params.main,\n      history: [],\n      scrollHistory: {}\n    }); // Install Modules\n\n    view.useModules(); // Add to app\n\n    app.views.push(view);\n    if (view.main) {\n      app.views.main = view;\n    }\n    if (view.name) {\n      app.views[view.name] = view;\n    } // Index\n\n    view.index = app.views.indexOf(view); // View ID\n\n    var viewId;\n    if (view.name) {\n      viewId = \"view_\" + view.name;\n    } else if (view.main) {\n      viewId = 'view_main';\n    } else {\n      viewId = \"view_\" + view.index;\n    }\n    view.id = viewId;\n    if (!view.params.init) {\n      return view || _assertThisInitialized(_this);\n    } // Init View\n\n    if (app.initialized) {\n      view.init();\n    } else {\n      app.on('init', function () {\n        view.init();\n      });\n    }\n    return view || _assertThisInitialized(_this);\n  }\n  var _proto = View.prototype;\n  _proto.destroy = function destroy() {\n    var view = this;\n    var app = view.app;\n    view.$el.trigger('view:beforedestroy');\n    view.emit('local::beforeDestroy viewBeforeDestroy', view);\n    app.off('resize', view.checkMasterDetailBreakpoint);\n    if (view.main) {\n      app.views.main = null;\n      delete app.views.main;\n    } else if (view.name) {\n      app.views[view.name] = null;\n      delete app.views[view.name];\n    }\n    view.$el[0].f7View = null;\n    delete view.$el[0].f7View;\n    app.views.splice(app.views.indexOf(view), 1); // Destroy Router\n\n    if (view.params.router && view.router) {\n      view.router.destroy();\n    }\n    view.emit('local::destroy viewDestroy', view); // Delete props & methods\n\n    Object.keys(view).forEach(function (viewProp) {\n      view[viewProp] = null;\n      delete view[viewProp];\n    });\n    view = null;\n  };\n  _proto.checkMasterDetailBreakpoint = function checkMasterDetailBreakpoint(force) {\n    var view = this;\n    var app = view.app;\n    var wasMasterDetail = view.$el.hasClass('view-master-detail');\n    var isMasterDetail = app.width >= view.params.masterDetailBreakpoint && view.$el.children('.page-master').length;\n    if (typeof force === 'undefined' && isMasterDetail || force === true) {\n      view.$el.addClass('view-master-detail');\n      if (!wasMasterDetail) {\n        view.emit('local::masterDetailBreakpoint viewMasterDetailBreakpoint', view);\n        view.$el.trigger('view:masterDetailBreakpoint');\n      }\n    } else {\n      view.$el.removeClass('view-master-detail');\n      if (wasMasterDetail) {\n        view.emit('local::masterDetailBreakpoint viewMasterDetailBreakpoint', view);\n        view.$el.trigger('view:masterDetailBreakpoint');\n      }\n    }\n  };\n  _proto.initMasterDetail = function initMasterDetail() {\n    var view = this;\n    var app = view.app;\n    view.checkMasterDetailBreakpoint = view.checkMasterDetailBreakpoint.bind(view);\n    view.checkMasterDetailBreakpoint();\n    if (view.params.masterDetailResizable) {\n      resizableView(view);\n    }\n    app.on('resize', view.checkMasterDetailBreakpoint);\n  };\n  _proto.mount = function mount(viewEl) {\n    var view = this;\n    var app = view.app;\n    var el = view.params.el || viewEl;\n    var $el = $(el); // Selector\n\n    var selector;\n    if (typeof el === 'string') selector = el;else {\n      // Supposed to be HTMLElement or Dom7\n      selector = ($el.attr('id') ? \"#\" + $el.attr('id') : '') + ($el.attr('class') ? \".\" + $el.attr('class').replace(/ /g, '.').replace('.active', '') : '');\n    } // DynamicNavbar\n\n    var $navbarsEl;\n    if (app.theme === 'ios' && view.params.iosDynamicNavbar) {\n      $navbarsEl = $el.children('.navbars').eq(0);\n      if ($navbarsEl.length === 0) {\n        $navbarsEl = $('<div class=\"navbars\"></div>');\n      }\n    }\n    extend(view, {\n      $el: $el,\n      el: $el[0],\n      main: view.main || $el.hasClass('view-main'),\n      $navbarsEl: $navbarsEl,\n      navbarsEl: $navbarsEl ? $navbarsEl[0] : undefined,\n      selector: selector\n    });\n    if (view.main) {\n      app.views.main = view;\n    } // Save in DOM\n\n    if ($el && $el[0]) {\n      $el[0].f7View = view;\n    }\n    view.emit('local::mount viewMount', view);\n  };\n  _proto.init = function init(viewEl) {\n    var view = this;\n    view.mount(viewEl);\n    if (view.params.router) {\n      if (view.params.masterDetailBreakpoint > 0) {\n        view.initMasterDetail();\n      }\n      view.router.init();\n      view.$el.trigger('view:init');\n      view.emit('local::init viewInit', view);\n    }\n  };\n  return View;\n}(Framework7Class); // Use Router\n\nView.use(Router);\nexport default View;","map":null,"metadata":{},"sourceType":"module"}