{"ast":null,"code":"import React,{Component}from'react';import{connect}from'react-redux';import{capitalize,isString}from'lodash';import{DndProvider}from'react-dnd';import{TouchBackend}from'react-dnd-touch-backend';import rpc from'utils/rpc';import{showNotification}from'utils/notifications';import InventoryContext from'./context';import Pockets from'./pockets';import Backpack from'./backpack';import Quick from'./quick';import Indicator from'./indicator';import Selected from'./selected';import Separate from'./separate';import Preview from'./preview';import Character from'./character';import Hints from'./hints';import Storage from'./storage';import withStorage from'./with-storage';class Inventory extends Component{constructor(){super(...arguments);this.state={showSeparate:false};this.storage=React.createRef();}selectItem(item){if(item&&(item===null||item===void 0?void 0:item.cell)<0)return;this.setState(()=>({selectedItem:item&&item.cell>=0?item:null}));}toggleSeparate(){this.setState(state=>({showSeparate:!state.showSeparate}));}async useItem(cell){if(isString(cell)||cell<0)return;try{const{items,equipment}=this.props;const data=await rpc.callServer('Inventory-Use',cell);this.selectItem();this.props.setItems(data.item?items.map(item=>item.cell===cell?data.item:item):items.filter(item=>item.cell!==cell));this.props.setWeight(data.weight);if(data.equipment){this.props.setEquipment({...equipment,[data.equipment]:data.item});}}catch(err){if(err.msg)showNotification('error',err.msg);}}async toQuickSlot(cell,slot){const{items,equipment}=this.props;const equipedItem=await rpc.callServer('Inventory-ToQuick',[cell,slot]);this.props.setItems(items.filter(item=>item.cell!==cell));this.props.setEquipment({...equipment,[slot]:equipedItem});}async unequipItem(slot,cell){const{items,equipment}=this.props;const item=equipment[slot];if(!item)return;try{const itemCell=await rpc.callServer('Inventory-UnequipItem',[slot,cell]);this.props.setEquipment({...equipment,[slot]:undefined});this.props.setItems([...items,{...item,cell:itemCell}]);}catch(err){if(err.msg)showNotification('error',err.msg);}}moveItem(id,cell,storage){if(this.state.selectedItem||id===cell)return;if(isString(id))return this.unequipItem(id,cell);if(storage!==this.props.name&&this.storage.current){this.storage.current.move(id,cell);}else this.props.move(id,cell);}separateItem(amount){const{selectedItem}=this.state;if(!selectedItem||amount>=selectedItem.amount)return;if(selectedItem.storage!==this.props.name&&this.storage.current){this.storage.current.separate(selectedItem,amount);}else this.props.separate(selectedItem,amount);this.selectItem();this.toggleSeparate();}async dropItem(id){const{items,equipment}=this.props;const weight=await rpc.callServer('Inventory-Drop',id);if(isString(id))this.props.setEquipment({...equipment,[id]:undefined});else this.props.setItems(items.filter(item=>item.cell!==id));this.props.setWeight(weight);}async transferItem(id,cell,storage){if(this.state.selectedItem||!this.storage.current)return;try{const{storage:storageState}=this.props.location.state;const inside=storageState.name===storage;const data=await rpc.callServer(\"Inventory-\".concat(capitalize(storageState.name),\"Transfer\"),[inside,id,cell]);this.props.transfer(id,data.weight[1],!inside?data.item:undefined);this.storage.current.transfer(id,data.weight[0],inside?data.item:undefined);}catch(err){if(err.msg)showNotification('error',err.msg);}}render(){const{cells,weight,satiety,equipment}=this.props;const{showSeparate,selectedItem}=this.state;const{storage:storageState}=this.props.location.state;const items=this.props.getItemsForCells();return/*#__PURE__*/React.createElement(DndProvider,{backend:TouchBackend,options:{enableTouchEvents:true,enableMouseEvents:true}},/*#__PURE__*/React.createElement(InventoryContext.Provider,{value:{onDrop:this.moveItem.bind(this),selectItem:this.selectItem.bind(this),transferItem:this.transferItem.bind(this)}},/*#__PURE__*/React.createElement(\"div\",{className:\"inventory\"},/*#__PURE__*/React.createElement(Hints,null),/*#__PURE__*/React.createElement(\"div\",{className:\"inventory_container\"},/*#__PURE__*/React.createElement(Pockets,{items:items}),/*#__PURE__*/React.createElement(Backpack,{items:items,cells:cells}),/*#__PURE__*/React.createElement(\"div\",{className:\"inventory_indicators\"},/*#__PURE__*/React.createElement(Indicator,{type:\"weight\",title:\"\\u0412\\u0430\\u0433\\u0430 i\\u043D\\u0432\\u0435\\u043D\\u0442\\u0430\\u0440\\u044E\",current:weight.current,max:weight.max}),/*#__PURE__*/React.createElement(Indicator,{type:\"satiety\",title:\"\\u0421\\u0438\\u0442i\\u0441\\u0442\\u044C\",current:satiety,max:100}))),storageState?/*#__PURE__*/React.createElement(Storage,{ref:this.storage,data:storageState}):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Quick,{items:equipment,equip:this.toQuickSlot.bind(this)}),/*#__PURE__*/React.createElement(Character,{items:equipment,use:this.useItem.bind(this),drop:this.dropItem.bind(this)})),showSeparate&&selectedItem?/*#__PURE__*/React.createElement(Separate,{amount:selectedItem.amount,confirm:this.separateItem.bind(this),cancel:this.toggleSeparate.bind(this)}):selectedItem&&/*#__PURE__*/React.createElement(Selected,{id:selectedItem.cell,name:selectedItem.name,use:selectedItem.storage===this.props.name?this.useItem.bind(this):undefined,separate:this.toggleSeparate.bind(this),close:()=>this.selectItem()})),/*#__PURE__*/React.createElement(Preview,null)));}}const mapStateToProps=state=>({satiety:state.player.satiety});export default connect(mapStateToProps,{})(withStorage(Inventory));","map":null,"metadata":{},"sourceType":"module"}